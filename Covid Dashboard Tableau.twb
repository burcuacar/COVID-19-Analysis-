<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0308.0326                               -->
<workbook original-version='18.1' source-build='2024.1.1 (20241.24.0308.0326)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.18ynen20zc7gvx124ovnv059zb50' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.19iirdb0hao26j1f08tea1cuyehb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/burcu/Desktop/BAU KITAPLAR VE ODEVLER/Data Analyst Projects/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.19iirdb0hao26j1f08tea1cuyehb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.19iirdb0hao26j1f08tea1cuyehb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ABC5E1F0247D49A19EF4AB27FF57B31E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ABC5E1F0247D49A19EF4AB27FF57B31E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ABC5E1F0247D49A19EF4AB27FF57B31E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_ABC5E1F0247D49A19EF4AB27FF57B31E]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_ABC5E1F0247D49A19EF4AB27FF57B31E'>
            <properties context=''>
              <relation connection='excel-direct.19iirdb0hao26j1f08tea1cuyehb' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.1r7rnr20wlubep1bnqoxr1qvi55a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.1d69jki105v12q1coqfjn1o3mnnf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/burcu/Desktop/BAU KITAPLAR VE ODEVLER/Data Analyst Projects/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1d69jki105v12q1coqfjn1o3mnnf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B12:no:A1:B12:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1d69jki105v12q1coqfjn1o3mnnf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B12:no:A1:B12:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B12:no:A1:B12:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7297EF2F269343A7A798BBEA3D2145E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7297EF2F269343A7A798BBEA3D2145E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7297EF2F269343A7A798BBEA3D2145E5]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7297EF2F269343A7A798BBEA3D2145E5'>
            <properties context=''>
              <relation connection='excel-direct.1d69jki105v12q1coqfjn1o3mnnf' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B12:no:A1:B12:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.1xpqvjb065wpav1ebghdi0f6ut5c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.1lgz0zw0od9fuc18s8kvw0jz9paf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/burcu/Desktop/BAU KITAPLAR VE ODEVLER/Data Analyst Projects/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1lgz0zw0od9fuc18s8kvw0jz9paf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1lgz0zw0od9fuc18s8kvw0jz9paf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_424DB8DC1949401ABD79B36843EEE745]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_424DB8DC1949401ABD79B36843EEE745]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_424DB8DC1949401ABD79B36843EEE745]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_424DB8DC1949401ABD79B36843EEE745]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_424DB8DC1949401ABD79B36843EEE745]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_424DB8DC1949401ABD79B36843EEE745'>
            <properties context=''>
              <relation connection='excel-direct.1lgz0zw0od9fuc18s8kvw0jz9paf' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.1lnr8rs0useovl1e5wer60wz9b5c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.0upvg3j1fnxxyu1eq85m51khoyaz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/burcu/Desktop/BAU KITAPLAR VE ODEVLER/Data Analyst Projects/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0upvg3j1fnxxyu1eq85m51khoyaz' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0upvg3j1fnxxyu1eq85m51khoyaz' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_55B697A2ADC640F8A5D4B612CC57E511]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_55B697A2ADC640F8A5D4B612CC57E511]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_55B697A2ADC640F8A5D4B612CC57E511]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_55B697A2ADC640F8A5D4B612CC57E511]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_55B697A2ADC640F8A5D4B612CC57E511]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_55B697A2ADC640F8A5D4B612CC57E511]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Low-income countries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;European Union (27)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lower-middle-income countries&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper-middle-income countries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High-income countries&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_55B697A2ADC640F8A5D4B612CC57E511'>
            <properties context=''>
              <relation connection='excel-direct.0upvg3j1fnxxyu1eq85m51khoyaz' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.18ynen20zc7gvx124ovnv059zb50' />
          </datasources>
          <datasource-dependencies datasource='federated.18ynen20zc7gvx124ovnv059zb50'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18ynen20zc7gvx124ovnv059zb50].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18ynen20zc7gvx124ovnv059zb50].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18ynen20zc7gvx124ovnv059zb50].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18ynen20zc7gvx124ovnv059zb50].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18ynen20zc7gvx124ovnv059zb50].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18ynen20zc7gvx124ovnv059zb50].[:Measure Names]' value='176' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='font-weight' data-class='total' value='normal' />
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='text-format' field='[federated.18ynen20zc7gvx124ovnv059zb50].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='height' value='73' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#aaaaff' />
            <format attr='height' field='[federated.18ynen20zc7gvx124ovnv059zb50].[:Measure Names]' value='38' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#efebe8' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.18ynen20zc7gvx124ovnv059zb50].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.18ynen20zc7gvx124ovnv059zb50].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2CD1C175-91D6-4450-85DE-340FBA7783D3}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.1r7rnr20wlubep1bnqoxr1qvi55a' />
          </datasources>
          <datasource-dependencies datasource='federated.1r7rnr20wlubep1bnqoxr1qvi55a'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r7rnr20wlubep1bnqoxr1qvi55a].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:location:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;High-income countries&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Low-income countries&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Lower-middle-income countries&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Upper-middle-income countries&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1r7rnr20wlubep1bnqoxr1qvi55a].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Upper-middle-income countries&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;Lower-middle-income countries&quot;</bucket>
              <bucket>&quot;Low-income countries&quot;</bucket>
              <bucket>&quot;High-income countries&quot;</bucket>
              <bucket>&quot;European Union (27)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1r7rnr20wlubep1bnqoxr1qvi55a].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1r7rnr20wlubep1bnqoxr1qvi55a].[none:location:nk]' value='119' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1r7rnr20wlubep1bnqoxr1qvi55a].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1r7rnr20wlubep1bnqoxr1qvi55a].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1r7rnr20wlubep1bnqoxr1qvi55a].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{AE644190-BBA8-4661-85D7-FF7E8D768C19}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.1xpqvjb065wpav1ebghdi0f6ut5c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xpqvjb065wpav1ebghdi0f6ut5c'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xpqvjb065wpav1ebghdi0f6ut5c].[sum:PercentPopulationInfected:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1xpqvjb065wpav1ebghdi0f6ut5c].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1xpqvjb065wpav1ebghdi0f6ut5c].[none:Location:nk]' />
              <color column='[federated.1xpqvjb065wpav1ebghdi0f6ut5c].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1xpqvjb065wpav1ebghdi0f6ut5c].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xpqvjb065wpav1ebghdi0f6ut5c].[Latitude (generated)]</rows>
        <cols>[federated.1xpqvjb065wpav1ebghdi0f6ut5c].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2A230E4D-DB50-46EB-A3F1-6E4AEFE6591C}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.1lnr8rs0useovl1e5wer60wz9b5c' />
          </datasources>
          <datasource-dependencies datasource='federated.1lnr8rs0useovl1e5wer60wz9b5c'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' forecast-column-base='[sum:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' forecast-column-base='[sum:Population:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lnr8rs0useovl1e5wer60wz9b5c].[tmn:date:qk]' value='218' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Location:nk]' />
              <text column='[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Location:nk]' />
              <color column='[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Forecast Indicator:nk]' />
              <text column='[federated.1lnr8rs0useovl1e5wer60wz9b5c].[fVal:sum:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1100' />
                <format attr='maxwidth' value='1100' />
                <format attr='minheight' value='650' />
                <format attr='maxheight' value='650' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lnr8rs0useovl1e5wer60wz9b5c].[fVal:sum:Population:qk]</rows>
        <cols>[federated.1lnr8rs0useovl1e5wer60wz9b5c].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{DC3AF654-06A3-4030-A355-C7DC661964D9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sheet1 (Tableau Table 2)' name='federated.1r7rnr20wlubep1bnqoxr1qvi55a' />
      </datasources>
      <datasource-dependencies datasource='federated.1r7rnr20wlubep1bnqoxr1qvi55a'>
        <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='6' type-v2='layout-basic' w='80748' x='483' y='929'>
              <zone h='24536' id='3' name='Sheet 1' w='40374' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='12' name='Sheet 4' w='80748' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='14' name='Sheet 3' w='40374' x='40857' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24535' id='16' name='Sheet 2' w='40374' x='483' y='25465'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='303' h='98142' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='18286' x='81231' y='929'>
              <zone h='32752' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Location:nk]&#10;[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Forecast Indicator:nk]' type-v2='color' w='18286' x='81231' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8478' id='15' name='Sheet 3' pane-specification-id='0' param='[federated.1xpqvjb065wpav1ebghdi0f6ut5c].[sum:PercentPopulationInfected:qk]' type-v2='color' w='18286' x='81231' y='33681'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36237' id='17' name='Sheet 2' param='[federated.1r7rnr20wlubep1bnqoxr1qvi55a].[none:location:nk]' type-v2='filter' w='18286' x='81231' y='42159'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='28' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='189' h='24536' id='3' is-fixed='true' name='Sheet 1' w='40374' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='14' is-fixed='true' name='Sheet 3' w='40374' x='40857' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='15' name='Sheet 3' pane-specification-id='0' param='[federated.1xpqvjb065wpav1ebghdi0f6ut5c].[sum:PercentPopulationInfected:qk]' type-v2='color' w='18286' x='81231' y='33681'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='36237' id='17' mode='checkdropdown' name='Sheet 2' param='[federated.1r7rnr20wlubep1bnqoxr1qvi55a].[none:location:nk]' type-v2='filter' w='18286' x='81231' y='42159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24535' id='16' is-fixed='true' name='Sheet 2' w='40374' x='483' y='25465'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='12' is-fixed='true' name='Sheet 4' w='80748' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='32752' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Location:nk]&#10;[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Forecast Indicator:nk]' type-v2='color' w='18286' x='81231' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E92AACA5-6A90-4762-829F-88514A6DBF7A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18ynen20zc7gvx124ovnv059zb50].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27CD7275-64C4-442B-B122-525A3EA054D4}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1r7rnr20wlubep1bnqoxr1qvi55a].[none:location:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r7rnr20wlubep1bnqoxr1qvi55a].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D24E8E1-577F-4622-9C84-FE8EA09B1F9E}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xpqvjb065wpav1ebghdi0f6ut5c].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xpqvjb065wpav1ebghdi0f6ut5c].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE10F987-0CD3-436A-9465-4B2530FB9080}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Location:nk]&#10;[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Forecast Indicator:nk]</field>
            <field>[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Location:nk]</field>
            <field>[federated.1lnr8rs0useovl1e5wer60wz9b5c].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{146F2E18-27EE-4C09-B5D8-0ECE8DF4E8BB}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Forecast Indicator:nk]</field>
              <field>[federated.1lnr8rs0useovl1e5wer60wz9b5c].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{557D9009-4E60-4F21-9EDA-111FFBAE21F2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='45' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAVDklEQVR4nO3dSXMcaX7f8W9uta+oAgooLAQIkE2yuTSn2T2rpBlJISlsSRG+OcJHR+ii
      1+CL734FOujig+xw+ODQMgrJbTsUmpF6ZjRNdoMLSBB7AYXaUPuSlZk+QE0SZIHsQiMLIPL/
      uYAoFp/nyWT9KrOynn8+iuM4DkJ4lHrWAxDiLEkAhKdJAN5jjm3xxS//mYdP19/8S8ukUK6y
      9/wh+3Xz2DZq5SJdy7tnwYp8Bnh/FZ/f51Etyo/uzPPzf/g/tC0/hmZi2D1CyXH+9z8+4N98
      7yrLOZVMpE5yaoH93Dbx9Dj59edYvhBqcZXghz/hxx9dQTnrDToDcgR4j6m6jtnr0beaFMom
      RqfIs70qSzNj1E2dhcuLaL0aW/k687PjLP/in3ier6Fr0LV1+p064+MZrlxZPOtNOTNyBHiP
      OY7Nk+UHKKEUhlmlbvmJBDSyY2EqVpDixgpjY0mKTYOlmSAHTYfdzVUm5hbodzqATTYV5dHW
      AXdvevMIMJIA2LaNqsrBRpw/utsdWJaFbdvYtu12V0IMbagA9Fo1nq1vgR4grFnkyw3mpsbY
      K1YYz85S2NpAD8WIRXwENQdCE4wnQgBomubKBgjxbQx1XuILRklEgkSjcTKZCQKhMPV2n9u3
      b1DLbxKfXCKoK9SrJdb3ai9e/EKcV0MFoLq3ztp+HZ8Bv/zVfSLhIEEDHj16SiCZ4WDvOY2u
      STCcYHosRL7ScGvcQpyKoT4E25ZFzzRRNQ3HtnAcBb/fR8808RkGVt9EUXUUBRRFwbZtNE3D
      siw5BRLn0kiuAkkAxHkl1yaFp0kAhKe5/j3AID+//4y/+XzVtfb/47+9y6XshGvti4vjTAJQ
      bnS5v1Zxrf1uz3KtbXGxyCmQ8DQJgPA0CYDwNAmA8DQJgPC0E80GtRQDpdugbWvMpKPslaqk
      JrMUtzfRQlFiYT9B1UaLTcmEOHGuDRUAXzBKJGCgh6I0myESSo9Sq8+dOzd4srxMMnsVu1Wg
      1ahQ7Ol8Mhd6UQ/w6owLx3Z39oVt2/T7fVf7EBfDUAGo5J6ztl9jcT5Bt77LgaUyMx7j/v1l
      UpPTFLZX0INRYpEk4zrslmpMpWLA0XoARXW3+E5VVXT9TL7iEO+ZoV4lyelFfmv68M8zky+/
      aZ2aO/w5N5U5tYEJMQryIVh4mgRAeJoEQHiaBEB4mgRAeJoEQHiaBEB4mgRAeJoEQHiaBEB4
      mgRAeJoEQHjaUJPh+t0W//zLX/Hxpz9g5csvaNsq85NJdl+5O7QWihEP/+vdocMTUg8gzrWh
      AqD7Q8xk0jgo2LaFbTlUW4d3h36yvEx8cgm7VaBeK5Hv6XzynXmpBxDn2nAVYe0G27kctj+G
      hYaBja47PHy4QiQ5SXl3FTUQJBZOMBa1yVfqZJJRQOoBxPk05BEgyL3v/ghV1ZibymADuqZh
      9vsYus7M5DiKqqFweHdoWX5MnHdDBUBVNfz+l+/kX//JZxiHjenGkecriheXXRPvE7kKJDxN
      AiA8TQIgPE0CIDxNAiA8TQIgPM2T3xaZpunqdxS6rqOq8t7yPvBkAP78L3/BPz3ec6XtgKHx
      X/709wgGg660L06XJwPQ7PQp1XuutB30yXKw7xNPBuAsOY5Dt9t1tY9AIOBq+xeJBGDEbNvm
      P/3Z35OrdFxpf3Eywn/+kz9wpe2LaKgAOHafh8sPuXrjNuW9TQ46NrPjMVY3dphfvEp+axU9
      PEY0qBMJaNRNP2mpB3hDq2fR6LgzXbsjK2QOZagA2JaF36fRt0xWn2+SmJgkt1fi+rUlnq48
      wR+dpt8qk6+22OipfHT31ot6gFeNoh7Aso5/ITicXf9vG9dpcEbQx0UyVAA0w4+hqaBAOJ4k
      qlhULJtOtwO6Qd/sYlt9/MEQitOma9oE9MPLga9eFnR7lqiiqm+9DKngfj3CWV4GlUuw39xQ
      Aeg2a9TaJk6+xKVsmnKzz/XJJGsbOS4vXqWU20RPThM0FMJBP9Vmi2A8Arz2ond5lvTX9Qhn
      6az6Pw/b/j4ZKgD+cIxbt26/+D2RPvx59eoSANm5hSPPT8Z933J4QrhLjpXC0yQAwtMkAMLT
      JADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtOGCoDjWKw8foRpgWObPF55RqdZZXn5
      Ic2OydqzJ2zvFqhUKpjtGqVqy61xC3EqhpoMZ5kmjtOnbzvkNp/T7FrkcnmuLF1idfUxvvAk
      rVqFZrXHZtfh5u2b2Lb9Rj0ALt812nacd8yJP7t6gDf2xSmTeoDhDHd7dF+AgKFjWz2KlRrF
      cgV/dhbLtkBRcWwLx3FQNA0Vk77tYCiH03NHOUX33VOCXa5HeMv2jmI/yHTob27oeoCDRge7
      WOHje59QKpeJBg1W13eYX/yAws4axtg4Ib9GJOTjoN4klYjiOM7RIg23C2IU5UyLQt7Wv9tr
      JihIQcwwhq4HuPPR3Re/p8bGALh+/RoAcwtXjjw/lfi2wxPCXXJXCI/Z2Cnw+aMd19r//s1Z
      ZiZTrrV/2iQAHrO1X+W/fvbYtfbnpxLvVQDkZFF42rEBaLVagEO73R7hcIQYrYGnQNXCDn/x
      P/8Xi5cXSEwucu/WlUFPE+K9NzAA0bEMP/zuJ3QslfnZyVGPSYiRGXgKpGo6pXKJWDSCJteU
      xQV27Ku7Uc7z2WefsblXHuV4hBipYy+DLn5wk2TmgFZDJrSJi+vYI0C1UiRfqJAci41yPEKM
      1LEBMHx+NF0j4JelfsTFdWwADmoN5uemKRbyRx5vt5rYDrSbdUqVGo5tUSgWsR2HerVCq9Oj
      1+vh2Badrun6BgjxbQz8DFAqFPj+b/wWpUIBI5x+8Xi/2+LXv/4Vdz/9DWq1Bvn8PtVwACPg
      Z3W9TrfZw8EiHA6g9ruMzSwhi/WI82xgAJ6uPOT2vR+SSoS5v7JBJnXz8Mn+ENOZcQBU+oQT
      KWyzw/T0JE+WHxJOXsZuF2k3D2j1dC4FjBcLZLw6DXgUC2T0+8evwOL2AhmWZR3b/ygKYt62
      7bbjbv/v2vfnzcAAfHT7Jp/9/U9BD/E7v/uTF493mzVy+QKmL0Ylt00kMc5EMsiDB4/JXlpi
      f3MVPZwgOZZh1q+xV64xlTr8EK1pL1dPVFT3F6jQ9ePn+bm9QIamacf273a1lgJv3XZVcfd7
      nXft+/Nm4EgD0RS//ZMf02x3sfsmaIf3+feHY3z/h795+KS56RfPT2UO/zyRvHukHbl+JM67
      Y98O/uH//h1fffUVpYPGKMcjxEgNPAI8efA5e6UGkS5k5UqOuMAGBuDqzXs4vgiLl+dZXcsB
      mREPS4jRGHgKVC3u8POf/Yy//Ou/I56W2aDi4hoYgMTELLOZONVyjrXt/VGPSYiROfZD8PXb
      95jLzpBJy60dxMV1bAAe3v8l4cwU5dz2KMcjxEgdG4Cp7DRPv1pmYm5+hMMRYrQGBqCUW2N1
      q0g0PkY8Ghr1mIQYmYGXQZ9t5vijP/5jFKvN5198yXfv3R30NCHeewMDEDEc/vt/+wsA7nz3
      N0c6ICFGaWAAPvz4R3z48ZuPO45DfjdHenKaWnGXpqUxNRZlbXOHSwsLFHc3MSIpAoZCyK/T
      6EA8KgU14vwaGICH//IzHjzZwHYc7n7/x1xfyAJg9Trs7u0QT0+QLzUx1D6r1TLT0xlWV1fQ
      9BjW3g4+v4HZ7rBw7caLadBH7ors7mxknNf7OwNn2b+Xt31YAwNw4zs/oFDIs7aTp958ORdI
      9wcZi0UBG80wMBTomRaBQAD6PfRgANVq0W03aHUUdFXFtgfUA7i8g5y3LFABo6kHOK8LZNhu
      73vn7fv+vDl24nY6u0Cj3UPnZXFDt1mjeFDH8lcI6iatvs58doxHj59xafEa+5vP0CMpksEk
      0ZCPYrlGRuoBjjj7egC312a4APUAjuMQjsb4gz/8d2zt7L143B+O8fG9T994/q1bh+sExK59
      eOTxjJz+i3Nu8GS4/S1++tO/5a9/+reogfioxyTEyAyeDJeZ48bSLAoOtVpt1GMSYmSOPVnT
      VB2fYaO+cu4uxEUzMABra6v84Ce/j2XbRz68CnHRDAzA6qMvePx4BYBrt++xMD0+0kEJMSoD
      A3Dr4x+SyUglmLj4Bn4Ilhe/8ApZ/UJ4mgRAeJoEQHiaBEB42olnLdmWhQ1oqoplWWiahm1b
      KP9681VFUXAcUF2e+CbEt3GyADh97v/LF3QdmBlPUGm0iI6lKe/uogZCxMJ+/IqFf2yGdExm
      xInz64RHAAVUG/oqTdPhww8/4MnyMsmpJexWgXbzgFJP55P5oKwP8BpZH+B8OeERwAJFQ1Mg
      HNR58OAh49k5CltP0UIxYrEUGUNhtyTrA7zu7OsBZH2AV51spKqPu995WTQ8M3v4c3oifcw/
      EOJ8kqtAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0044
      bc9h5eFXOP4oCZ/DbvGAscksxe1NtFCUeNhPQLPRolOMJ2SNMXF+nSwAdpf9Yo1AoIcVj3H7
      zo3DeoDsVexWgWajQqGn88lsSOoBXiP1AOfLiadDx6MBun2FsF/l/v1lUpNZCtsraMEo8UiS
      tI7UAwwg9QDnywlHqnLr7st6gEvzhz/npuSGWuL9Ih+ChadJAISnSQCEp0kAhKdJAISnSQCE
      p0kAhKdJAISnSQCEp0kAhKdJAISnSQCEp5142p5ltnnwaI0rcxM839xl7vIS+5ur6JEk0aBB
      2K/SskOkpR5AnGMnCoDjOKyvbaLqCvlChRs3lnj6ZIVAbBarU2K/VqdtGnx895bUA7xG6gHO
      l5MFwOrRbLfZy+8zk52h2WyhGAF6nSaWaRIMx/G1W7R6FmHfYR2A1AMcknqA8+VEI1V1P7fv
      fMRCvU4o4GN9M8fS4hVKe9sYkUv4dQgF/dSbbfBFTnvMQpyabxXVaDQKwOLiAgCZ6bkjfx+L
      yotfnG9yFUh4mgRAeJoEQHiaBEB4mgRAeJoEQHiaBEB4mgRAeNr78521uBD+8ddPWd4outb+
      f/i9O4RD33wCpgRAjNTjrTJ/9fmGa+3/+9++OdTz5RRIeNqJ1wfYXHtGreOwMJ3m+UaO+aUr
      5DdXMcJjRII6kYBG3fRLPYA41058CjQzd5lHDx+yvVvk+rVFnj59gj8yjdkqs19tsWGqfPTR
      y3qAV42iHuBt047drgd4W/9uT4d23tGH7bi77Y7z9n3PGe77QU4cgNWnj5ldvEpxe51Otwuq
      Qd/sYlt9jEAI7DZd0yagqziOg6q+PNtSFHfn4yuqeqS/N/7e5XoA9R39u+2t2+72vleUd2y7
      2//37+r/qJMFwLEBhZ3NLS7Pz7KxmePy0lWKuU2MZJagoRIO+qk2WwTjERRFObrj3d0HKLj/
      H/3OMZxR/+/advdHpZzpvleG7P9kAVA0rly78eLXq1eXAJieWzjytGTcd6LmhRgVuQokPE0C
      IDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDztFAPgUDso0+r06PV6OLZFp9s7veaFcMGp1QNY
      ZovNnSKOs0c4HEA1u4zNLhE4rQ6EcMGpBcA2W4TjE9jtIu3mAa2ezqWAcVrNC3EqfvHVcxod
      88XvpxYAPZCkWfoSPZwkmZpkzqexV64xlYqdVhdCfGv/4/895vFO7cXvpxYARdW5eefukcei
      p9W4EC5RHMfdComvC2JenaPd6Zo0XzkMnbZ42I+uv1yP4PX+G60uXdOdwhRFUUhGAy+m5H69
      e1+dontQb2O5VBSkayrxyMtPXq9ve9fs02i5d3EiGvLhM16+r77ef7Pdo9NzbwGNZDRwpL/X
      +682OvStlwVargdg0CBG7Sz7HxSAUfLyvv8m/Y9kZN9kBzhOly+/+JL17V3X+m9U8uTLDYql
      N2/LYXY69G2Hg4PKkcefP3uG9Y63CLvXotkd/K72RjHQN9CslsgVyi/bNztHPrgN4+ttty2T
      p08es5nLD3iWTbvdodus0Hqlm/L+LqVq85191Ov1d/b/TeTWntHqO7RqZda39wDod5u0eyc/
      Wr+r/3NzWxTH6WLbfhKxKNs7OxgO4FeoVNqEfHBQa5PJpCgWSiTHp2hXC9hGiKWFuW9c5dRq
      t9kplgn4QLdNtvaKZCanye9u0avVUMen8fUO2FpfZ/HDu/idBvXaAflSnVZxg2qzi99nMJmd
      IZ/fJZVKU8jvM5mO0fcnWVvZZHI6S2Fvj3gqQzaTOtG+2N0v07cdolqPtd0Kl7MpGoTIrT/D
      H0lyaWZy6DZ7rSr1rs30pSQbq0+odxzisShTs2NsPN5mdWOLWx9MsXmwRzaTZnZqnGLlANQW
      TttgJ18GRSc+No7TLtNTQwTVHo4RRVP6lPI5lEAc1WzQ6Gtcu7IwVPWZY/epd1o0t3LUcytE
      ppf46sv7JGMJAokkz1c2mMpOs7e7Rzw9wXQmPfQ+GORcfROsqCqqolCr16lVqzRbbWYuzdPs
      9Lg87mej1GFhcYlqYZutnT365rDnkgrTEwl29g8olKpc+2CB/dwekbFxZqamuDQ/SyiSYGk6
      TrUL+zs7dB2N3dw2mj9EMhRmZm6C9SertC0we2184TGiPot8bp/03GUCTpdO32Z792RHMse2
      2M/nKOTz9BwdHYtGrUrloEar22MnlztRu75wkqvzWR49fETLdEjHdPb2K1hWl55jMDc3SyTo
      5/LV65idBlavSX6/RG4vT9fsMzeTJZGewOnVWF/bxTRNOj2HuZlJ6o0aXUthdirNQa3G7k6O
      YZfia1cL7Fc6FPb3SI1PMjM1jhFOEDFsSqUiycwl/E6Xrm2feB8Mcm6OAIriR6VNuVojEfZT
      rnaZHUsT0FUyY3G2DtpMRx2ePl1lYekDQsEtCISGepcJxxIYgSiXmy2ymRRPn21xaXEeFAio
      Uda2c4ynxtB9ENWhG0vzyUKKcql0uMifZREIBLh68xrb21uEowmiqoGum8xfDlLcWUdLJgn4
      fEwkkifaD45tcv3WPcKGzUGjjarpRJJpDEen2K2RTMVP1K7d77Gzs0smO43PblPt2FxbTLC2
      ukt6YoZGJUffSBA2wEgmMU2Lu/c+Rek2aDsKwYAf1Q9OKIB2BWw9TCIaRAEm0hmsbpPtfIlI
      OIw/PDZ07XHf8fG9731K46AEDhiaTiadIqBaZJMB8tvr+JJJAoaP8XTiRPtgkP8PMOO51tVe
      ZsAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d5Bkx33n+cl8rrxp7914j8Fg4EGQAAcADUiCnpJWpERxb08XG6u4i4vQ
      3sVeMC42Lu4f3a50IWm1POokUpQoEHQQCBIECA+MATDem572vru6fL16Ju+Pau+mxwAY3eob
      MdNV7+XLzJf1+2X+8udS/PDMoIpceJ6Burtxki0AqGKO+t7XGdvyCRCics0pIwwTAG1qELdY
      gHgNIhQnevI5PtcxjQCO5es42XgA8mnq+96kRZ+mLa6IBQQgUCiUUlyd8mlPauhSUCjDoB3k
      YMsX5tpbhN7TPFA6RFQrUxv0lt+/jeApwTvpasYiXaQbdhHtfpvMlo8hpPah9Gd70ONsQYMV
      hvV2RXzoGJ/U3sFT8FPrk3N0eauhPBc9MznCGWsbxVAroixRyqf5ypvUuBd4t/zpCkEqxbYz
      TzMZ28BozW4iJ17nI7E+Lpw1SdXvpje0kc7Lz3JXQxm/v5d9k2cZT5c5kasm5Y6ST3gYOmyp
      FbzWqyE8l7ClMTYd4YG6LKNpg5eNhxh39JU7muhi6nwPD7rv0ZicmrvuqwpLiZWY5sOCD8Oj
      Jc5sfRj8IMFUkZJrfmjdmXAFBU/+s2EAIzPC9sFfEqhOM21LehMCt/z+TB6qWES/a/oVNuSz
      HHTzpOt3gWaw1e9mUzjDr1LDUNUEQjBktrJj5DVKE2PUGjlGMvCVTdO8le/htfYDvHQpzeDk
      ZUaNML8TPUPU98HIcTDxJH3BEK4weK/YS67eINe0C90t4uemEaPPcbjqUTLNd6z6G4lglGRE
      Z68/RV9WI+UFsSScK1VRjjeyxznDxlAOXb4v43Rd0CU8GBuiNPw2Q2I/JawPtT8F//YmflUq
      0DB8mJKvUU2Gu73jbKlO43jwG2cPTlXrre++Uijlo7JT6AFdsD8xzX7xHN/rG6d306c5nHiE
      rvzT1E+ewkqdYLJ6O3a8maErDiVtjLtbhzkyqGMZgoAqg1IUajbyzlQYbctuzlwaoJRN8Xa+
      Hn/PbnytMrOPsgGo/B4eCXw9yIt1/xbr/OvQvHaf+zY8wV/3BBGFy4x3fhTNMrHDNYhAhHN2
      gdbzz/IpcZCG0IcvIjWEXL6q3uC7o0FyVR2svK79C1QhQ/ydH/JEfS8tIRtNgAJOpuO8FnuM
      yU37rmt1V3YRf7QHWd+OsEKrl3MdzBf/Cw/WTqB9+bOPf7spkEaTgkh2kNNiI0pIOp0etjsX
      CGf6Cbo5+lo/Ss6GPd5Z6kMujRGP6pCgOxukWzUiE7XIkSuIhk7GixoHQpe4v3qKs2OSUlVb
      5c18n/DACXaOv8q2ibfwp0ZIR1rxjQBEqtZ8WSEk+WQnubZ9qGg1XiiB0CuihdAN0vXbOZUK
      0WpfJWG46x609wN5RxLQFKKY4fLWL91eItptAjk5wOf6/pwnG4apsjykgN6swW/Yz+sbv0kx
      2Y6QN7Ck6yYiEFlxzJXnwkQ/m4df4t5gN3fVZdA7qmF4yidswsYaeGL8hxRFkLL02F4laKtS
      /CBfgzXZi73pHi4OWRwtKbaMvsKWWofR8RzW2GtsDU6xo7rM07ldVHuTJENQduGO1Bs4J06Q
      CtQjcik+1zKGFQAhBA94I7zdO8DLHV+/aSIRQmJvfZgjF0fo4M2bqutmkSpJ+nI6VWYa0mMo
      I4CIJD7UPt1OUKU8d/f/iN3VOYQAx4MXSjs52vpp/Ej1DdOC5hRR+SlUNLm4PaWIXj3IPc5h
      duq9REI+Mgyg0HO24uX+ONsSRfIEqDOK3FOfwfEqGhvbFQwazTwy9mN+432ObNcDqGKOtvKr
      uL5gKtAIdTt5WD5HbUjRMX4Ey8kgQhAwBI9u8IFpHC+FqAJdzr+coQm2RHO85hTwWNzpG4EQ
      giwhlFpZmfRBQClFS9Tljakazjgb2XblJwwGN5DZfgAhboNNyocMMdrN/rFfcl90CCHAduHv
      C/fRu/UphJQ3Je8ru4CSiwVOPzVGePoq3/B/RDK8XDLQXws+TO+uIM7IEXYag3SFM7w3GedN
      617Cfp68maDYtINfheshVlN5KhDm7bonOVguk9vWDpkJ+tImdWGboJdjONhFunSWsKkYz0HV
      DDPMYigD9RGFJgXvDgp8q3QTr70Y/Z0H+OXFIZ6wTiM/BCYQQqCUIuZnkIlq+mJ7UaXCB9+R
      2xQyN8lu2UPMUgC8Nl5D7x2fvjFxZwlUomHRd2+kB+Poc/xO52WS0ZX3hrpX10X7xZf5eu0x
      Si78srCTUxufQugmqZlCAiA5X7kQglzTHpRSMNINdZ08m3uYM9MTjEU6ySa7+C8XxviIeZl3
      0kmeiHUT0HwG0gLLgEG/ii47h24aDNXuQjVsuOmXn+ubGeRE21Ps7rtCS6B4y+q9XjSGHJKp
      CwxrDYiNd9/OipgPFDXpSwQjkLXhjfEk7zV/GmHcnKbMH+tD1rYuWvb9yWH0Ey9wZ2SY+lWI
      H6goKPpaPsqfjNRiW3HcxuvYfOTTkGxEmAHUpv1c0TQo22AGKO75FL/yKkvOP6THKmqn5ghI
      DcwA73kOQimUFbrlxFHWLFIljZbALa54XVBkHTA0qPUmMeJJPtwteQWGUPgKvA+RFVUhQ1fp
      IslaxUQB3m36LKplx03XK6qb5g22qrKyKM/FrW5jaqwHxwNzmSmhUr4iMOkGhZY7Fly+xov4
      PuRSJKYvQ3aS6W2Po5UyfHToRzTKaQ6qrZTMBENWOzR0oqqaUL4Hvo/QDWbbXG971wvfLnJJ
      NbGLC+9TC8sxO/AIeCtVz1Wjk/Hdn4LIze9tbgUc9eGuQUr5tPe+xNZ4HtuFn4x04D+w+ZZo
      yIS2QO6fGoJiHlHVgNh6L35gGlN7e+kTs71CV3YRRGSFDiso5ohle2nNnudC4yN44SoAkj1v
      8WD6ZUZz0FXl8bOhVoKlKToZpi0u2KSO4/iKP/M/TxYIj1/gwenfYHhFnq/+IsoM0j55lFGr
      iar8AEPhDQhNw6vfcGsGJFrFWKQLuHDTda0XSinemqziwZoJHq8bZDA3ynfdx/5FBTqDcN97
      7ModprXRZ7IA0x33z6mxbxWUXcS3SxjKobXv17T4Q2zVrq5Ucu6Trk30YsgwTnXHkjIKRq7Q
      mj/OF+t6+NvxOL3hAyjfp37qNMmwz10tcGJYYIdraLWv0ppUgEAIOJKuJbtpJ9ZUL98s/pCq
      uM/P01tIpLu5L/sG+1tcXuyPsjOep8k8gu3C967ex0DX4zc9EMKwyGx4mFPn32FXaPKm61sN
      SilcX1H0JKfGA5wJbMCeDtBppXg58BCEou9b2//ckIs0Y0xKCmV4J9+MvXHPup5Tnkvn5WcZ
      i2+m0LCzcs33cM8cRN92z5xEYQ6e5itT36U17iLFinP6ipCPyXd4YuInqMwEyrFR5SLkUlAu
      8pn8L2j1hzk+IhgJd6KUIjhyjvMbv8DFaZNCWfCqdjdG73G0UpZZznJ9xTuhu1FCcsfYS1QH
      FdO25Hi5haorr9AedwDYV5PjhbE6lFIYGnxKHIbMxPWN7CooCZOsa6DUtcveDDShGCvqTDsm
      +7xT9DpV/KDpjxja9rk1rZH/LUG5Dk8MfJctVWUup3Teaf58ZS+4HpQKVGe70e1cZVIu5ZGj
      V9E6d0K5hFIKMXoF3/NpiHpo8vpU4LIu6DNd1ni09295qvcvMUYvc8fZv8GY6iNkSe5vsrnq
      1WHXdIHn8JnUM9QNHKQt7qOU4suBQ/jpKQKWZCwLPx1t5cVUG9N1u8At0+EPAnCukKQtkGN/
      C8SDClAkAz6E4jyX2cRfDO3glaEoWjk3L0/fBITyOFVuwuP94wAhBEJI0rZOPtpEt1NLZ+ky
      tUNH3rc2/zmipe9l9sSmsHTFFa8ev7ZtXc8ppdh86R9JmDb7c68THzoKuok1fBahG4hgBMol
      WntexInWYnvXr0qVoNgWSnFfTYY7Yima+t9kX02efeMvMS4rev/msFOZSTWD10IP843EMXbW
      eoQtqI/CI8l+zls7iAUUU5F2Dm39JlhBgqPn2VztA9BqZBj3YwRNgaVXWHQ4A2MZlyOFVu7W
      LvHFrjRPjD6NMdl33S+yFJ7nE8r0I4UH7zMT3Flb5C6jm3SwgcakzpS/zvX3vxHkRZiArii7
      cKXpkfUbBItZ7rUucX/VKPfHB9ideg2l6ZjJagIT3YQHj9F54m/obX8cAlGuFqL41/lTSxA0
      xRTGzEb69zeO0BZ1aQnkGbYresQ2Iw3FLEIIRtse4v9Wn2W4oCMQSCFJE8IOJDjcJ+itumOu
      ct0tMUt8AgVDFxmYVrheJTag5EpqS4PsHfs141NFpguK/bUF2npegvJNGsfcMl2RPALxvolB
      BadiyQTojJb5Yugob5n3oGrb358G/xnCmrzK3sIhADzl4xnBdT+rFVJUmfbcd1cPAIpYeRwl
      oJgv0a5P8Mf2f2Jn3894tvN/4qXs1uvqn1Rzs6MC4c9piDrDJSaLFU6tC7nUps7P9Eqj1HIH
      PxMPM5FXnB+FftFETXGAvAijufOEa+DOuT7UBl0SIUlHFWhSIJA0ROFrO0p8dJMkZilqIgoh
      oNEZgu5jqOnxGxeHNJ3miMvlTIDjEwHyZZbVpZSi7DirVuF5yw0oC6+VfcGbIyFKboWhE5bD
      A4U3cKJ1N9bn/x+iPfUe98f6QCg06WOWM+t+NpHrI2JUfjNfwaXgbjZffIZHvTcws2P8nvwZ
      yYjE1BSfCx1m49CLXHEbODq+fuWD9u9+94lvW16aykwtETMcYOqK3ZFJdCnQpGAkC8PVuytP
      CUE2WI81cJpfxT9Fpnkvm3uf58mONCo9SU98N0JKrOwIW5xLaBIsXVBrFDhfTLIhkgMEhga6
      BkED2qokQigcV3BywCXb2809pXcwvBJTiY3Xr070fYyJbo5pO7mcCbA1ME5kidYtly/geS6u
      61K2y5QdB7tcxnEcSiUbx3XxPI+SbWOXbFzPp1gqEQhULJeWpoiZPkcnw/TmDJrCJZKWx5Gr
      Ll7Ljn9RgQIZIlw6P4heztEQ9UnlFMO1+9Z8RilFYLqfz+Z+RJVZmVCHcgZvJj7Bk4WfkTTL
      vB45QLg0wTa9H0uvTJzbtV6q3TFGnBhdkdy6+qf9b9964tvSmQbEHPHPQpeVqwrFMaeNiapt
      c/eEptNbsw+qmogMnea34scwdAiW07xr7kVYQUrRRo5fyfLuRJguY5KGiEtbqIAmgAUrT2UV
      Ugg0NAl1YTClYlMNDPWPkY0044WS17W9F7rBUMM9FDM5nKpWpgcG2RnPLSJK13UplWyklAgp
      KZfLuK6H5/kYhjG3QjiOg2maOI6DJiWWVWEATwnOZiLENZvDtZ8k4+ps1ocJe3ku1n9k/WGQ
      c0a0D5Zh/LE+vEvHIDOOPj2CkZ/EjdXdUsb1AjE8x2VyZJI91TmSapqTcjt+MLb6Q8rnwbN/
      yh3J1NyliOnTXwiTJsLOwCB12YukXYs3RmvYV1VRdQvg6ezdbNQGaQzZq1S+GNrvffWT3z45
      ZZJ3JQndRpPzVjLB/Gal1hvlxLDAq24Fu4jKTSNDlZcwiim2Fs8QsUCXklP5GuxEJcJlf+5t
      vlZ/hVgQpFAzxL/gXVG4nkLKWfYThC1JZ7Xg+KAiKDyme7pp8kZJhxpRxvr9G5RdYO/QL4iI
      Mhfjd9JVukR8QayAaRiEQkEsy8Q0DYLBIKFQkFAwiGkaWJZJMBggHApV7gcCc8QPkLIlB0ej
      dEZsxrQaBiNb2GmfpHdK0NPysXmr97UgxAdK/GpqBP29XyAHL3Ln9NsUptO0Fq8SGDpHMt1N
      OtICt0iFK4SgXNWGJiXlzDTjGR9z4CQTzfcstuAuhOugTfaxMzgyNyxiRuZ/t/px9paO0BQq
      0hVMsTUyhbFA9dlpjDKYUrTH1+eAou35xn/49mUvyUmvg+6eSbYn82gSFrsQKCKGzx7RTWYq
      zZifACERM4YeKzPMQ/q5OZHGHRugO7gFrCDDgXay/b2cHFJsSrhoUuF4MJUXBM3K+vKTSzFM
      HaoshVygIWiJw8GrPl/b5RK3x7gwqePWdqx7hpJ2jkjvYe7Ur7DR72MsB+3h9c0M14LtCU5O
      WORtn6PaDkQwQjbWxkl/I5fje/GTTR9aIPxKUE4ZNTmEch24cAiz7ySPhy6TNqu517zKNmOM
      GpHmAeMKmd6rjLY/cMvct4UQ2Mk2emrupbfhQcardiB0g6ZLz5Ot2rTM90xoOsH8KHdqlxbN
      C6fdTkbCG9hfOoQ1wzumNk/8PoKSMmiM+gS09UUG6l8wj2CFeig6IDeBqQMzIslSxAKKj+SO
      Qd8gZ+76HyqbyskBykaYUkkQnHluzAmhPA+hwI9Uc3T77yMvHqZ/aJI6LUvScgllhrhwJUh9
      Sx01kWH+vvxRvpV5ieb4gs5pgke3SHpTcG7U5xP1b/HKcBWZ5jvX9XL1w0f4Un03P09tRQlB
      jTMw8143P9tamuLehiIF4ny65hhh3Sc9+TKvpFs4seV31j/7f0DQz74Gl49S0sN0eIM0RYts
      ixeosoewcBnOQ1kJ/qGwgcE7vgzpcQhGIRC+ZX0Qmg6ajqhqQNkFOgtniV51uFD/aKUtTZ9z
      J7cK47Bkz5bW4nRNv0c0sLJiRBMKS3gIsX7Fifa//MET39acNIYm0OTyB/PlCpcppXirV+OZ
      6e1MhNqgYSNkp3jgwv/DUCnAqUGPsjCJiBJDqpqxngFUVRMiEK68eF0HnuvwZfNNCpkCr45V
      kbvzKdKDQ3TX3YfwHC5nA+yLjiHlLJEqYgGJ5ytSRcXFCY2xqm2IZMOyfq4EvZQhnOrhnvAA
      v5IPUJ/vZkPc4VY5yEkh2BC1MTWFEIrRosEr7V/Hr1mfoeeDgFIKv/cM2rFf06lNsNsa47H6
      FNtiRXTpE9Uc+vIau2tsAtIjn7fxu4+z1T5FbnAAu+2OGxPPpoYrRL0KhG7QX72PcPdBnir9
      lLbJd/DSE0wHm1GGRejyWzQaGaLm/Ex+0WlCKdhh9K9aryV9FKCvkwm0/b/17759MJ2g3h0i
      Yi5+qOjAX4zvJ+KmqbEc8rZPnBw9bQdQhSzNY+/y2boeOrw+Dgbvpz+xm/3qNHcmpgkVJzg7
      Jqgpj1JMtFXElnyafe5Jttf5NJoFBkohsjs/gVZMgxlA5ia57NVxR2hkhosr+5BoQGC7MF7U
      iGslUnW71iUGFSMNDBctDoYfpNSym+bht+iIlm9poMysavVSLsQPG/41TsOmW1f5zSKfhqFL
      dB79HlvDaVpDZQQK24eaoAsobE/gKEHC8im6gn43wpf2umxKFAkUJ5BX3iHuTmK7UA7VrGvc
      q/oO8t/l/5JTuRqc+Hy2A6XmU9go38cbuky5ppOH1Du0h/PsMnoJj52l22si3Xo3TjbNNnNo
      7vnTXhcjRjOR3DCH3W1UeROEDX9Z+9cmfjH3V1b5U/RGtpIu6yilKDmKVFHwi9QG/lP2cdqi
      Zd5gD9/P3cPVwEZOqo0ITUcOnifg5hgtmrQloaV0lUCqlwvZEAqfXY2CYGaIb5q/pn7wYKU5
      K0jftAQEXVU+UZVDmBaymMFr2EiuaTeGW+T57vC8Xzc+isq+oT8t6N7w5Lr3AEIIMl0Polq2
      IzyHHfHcumeGlaCUWvbPV3AmF+eZxm/hNmy+4bpvNUR6HH7xl8hTr5InwMP1GToiJVJlQdlX
      dGd0zqYsenPmHDP0Fyw+uslFysqKtqnG5QtdY3zNeoVv5f4rHVefr7i1L4BSCrXEaCm8Mu+V
      N5JPdAKgTQ9Tc+R7qHwGZRdRxRwbLv6YO7NvAoKsNy8u3hkZ4Xen/oK6oUOcb3qCc+n5VaTZ
      H2K66U7eDH6U2vIQf2cfYKRwI8E08xpIfWdglNGLl/l58lECmRKZXBmndSeWN8SB9POELcFQ
      0eL16AF6N38alZ2EcAK1+W6uZFP4lydRUxYjmw6gpE7T+BFAIKWiLVombCqqR84zWrWLrsl3
      ubulolp9o9cg1VUJhrD1MMJ1ETUt9Lh76E1BcqiPexrtGbFMsKNBMJp3eP3Qc4iPfrkS/b9O
      RogffYYtznmSMbgZ8afsCc5OmtxRZ3MlG2BQa+B07G7Gt+6r+KXcJlC+B/3niMkiFPO0hvMc
      Hg8hUTzQVGCiKMmVJVsSNjlHEpmZRTVNEFywdQnPSQSCmOnyNe8Fnr5cpLvzSZiL4lIELrzO
      ndoFLifuZqzxbibaH+J1HsLIjrLz3HeRUwM4eojsdC+fyz1NwZXsiKZw0Xg4f45EaF5jIwS0
      xhy+Vv41f9/v0hSYDye9y7rM4cETPFJ4gU3JPE76DJecBhroXX0sFLhK4iIIyuUbY+3eJ3/r
      24di91OON1Gs2YQbTCL7TlHMFshMpWmPedxVX6CcmoTsJJmGXZXEQnYJMd7LV+LH0EtphjKC
      R5032RWfRiDRJGyOZhECntUeJdh3jB1aPx3hymyR9gOcaHqisj8wA2AF2d73PN+wXuRsOsqI
      rCchCtQEKp3WpKKrSmDkJ7hy/CxSCKi5dso85TpsvfwMmhA4dpm6kLfM3rFeCOAn5f1csLbw
      RsPnudrxBMWqzrmUkbcLvDMHkfEaCmVFNNPP9miWjrjL1mobS6s4Idq+xPOhJugzOykEpE9f
      zqQmunR8Kt81Cbv0XrShcwya7fiBWEXN6Uv+lfYcXaVzvKftBd0kNHGZr6a+w93hPjbFC8RE
      nl32cTqjRRoCJTQJhlQE9OUiDEBA89lGNzFr/v5kUePt+i9i5cbYbI4wkfFoMDIkrNU1PgpB
      2jMJae6Koq9+b3KCuuEfM1GoIVieptXKYiYEf9/bSnu4xI6aCsE+0TSGr8Y4feEEUhPUaQXG
      /ADxYCXoPeEWuDc+MmM7qKi1gkZl9u70B+iJ1XNP+Njc4rMzkePIyGGGWj+CCMdRyqfF7cfS
      IFO/EzvawHvFKFt5d66zmhQ81KVhyEn89C95o8fA7lhbI2QMX6BaZnAd2FhfBDRuZBVQSvHz
      8j4m9n2Fyfcxmu1moZRC234vqpQnduhp7kpm2Fu/3K8qoPuUyjAvDgjips/IdAnbDc6pGWdq
      nSsjBDwY76d64M/5kfW/IoIRwl6G/mKEfwx+FRWK09DzMk/5v6I2XCFeIaA5ev2BoRFrsbh6
      WbWCaRGn4k5RHXA4k4pQFywTMlYWbR0lCEhvVdFXD5uKvTU5YLHp+FPV3bx4WcffyBznSAG7
      q/Nzg1EXLQKK5hg09V/BccHUZ81ZFf8YgE/q73ImE8CMz3OzlJAsDTO7xRFCciT8AKdLWZyu
      /UipMdU7gK8qDhqz1KZJeKBLcrTfwzz+KwqTE8jt968qgtQXe7inIb9AkXFjuvmMo3Gh9qHb
      Tr25FEIILCng5ItsD0wSMWdn+MrYex5oGkQMn3Rx4VjMxAybFpZeyek0XjRojq7sK9UZyROc
      7qUU3EHIzaAQkKgHIXjIfoPaxMoz+41AKciWJW9GHyM2eob7Qt0AdMRs2qL2mkoNU/iYYvW+
      zPC5mHF5mC/YWSOoHfYpu2pRSpMF3Zr7FLEET24swAKiX4iqINzbUKDgCEqOIlMSjFHFmdbF
      0V/pln2kZz7LfIpPeq9R9AWeEoQ1KJUVqYKiJSHY3aQhRYnTo28wcWqSqf1fWdFwM1S7j9Pd
      r7Mrnlqxb6thqePcq84O7LqN16xh9rml+xPluSC1990/SCkFF49wYPKfaIl5TNiCUsmjbJcx
      DB277KLrFZ+vqayJis9rOT0f5EyCVUODo9lGLrtwZ3hwkToSwPYkrhFG+T6TzfegXXqWTw3/
      V4quZEN0PjhqbQjWsssoBc+cCdMYhz6zC68rySMT30db4FB6LY3evE1g5YIzDOCjWEw8lg4f
      2+DPzejLK1ELri69vryx89NBfqoeYs/0W1zKR8ns/xIivHK2NFnK8MTYD+iKlbB9jZwnUUAq
      p/ib/k4OpHtojPjsaBRkbLhqVa9qtQxlh9gZyyDQFzH4teApwYV0gO2JIi9l2jm56alrE69S
      +KffIuwXKe7+OPg+FNIgJMljz4FhMbXtY8h4zbr7cd3wPQqn3gbL42LaYFssjecaOI47lzCs
      bDsgtUouTjXPrIYGXq6MUiZCwIG6fv46/xiHol9gy9SbbPSusCWSYjSv86vI5wj4eR46/585
      prZSF7LpMGZFrfVq2hZ4Iq9AM0LA/R0OB6ebKUUa+Pjw37I7NnIdgzFvT1oNCyS95YXqY0s7
      tdA/SKBWrHhGz4vHW70a1YkAW2NF6oMu0UyK99xORFDOJ9laAZ4wMP0yAolEUGt4SKE4Ni0x
      mjt52djOfWPPY2qK3mlwtu9bdWbOVXXRfylAe6SMQFuXeb/swUhe42ouxOHEo/Tt+fi6RB9/
      rI+OY8/QqDIcMmPUXHiVruwVChjsZBQPybPhGpxdH7tmXTcKf/gqj4S6SYQs2oI+yUBFNAxH
      5tWFeVfjbL6KcVOj5I8QkvMTQ7VeZiQboDHmE9AV/zr6An+eq+LUlq9z0nVQ432I9jo6xt7k
      X6W/Q03M5U6nh6C+kBbWJrqVsTITNEfKfDFyFVgpuH2tupZ+XnkluKnExatpUyrilOSeFvib
      kTbGsz1cCO/mIf0Mr+nNpDcvJwDl2NT3vEom2k44P4xdKkNMIYWacdIW7KhXHJ0YJ33nU1wZ
      O44/PsSFrs8g18i7KcIJno98ij9Qz6AJ0FYR02bhK/iz7McoN25HdcZxk03rE5yUQoz3MbLz
      E2iXX6Hr5E+427mCicJHzmQ+9vjkye/ws7ouRP37EDSjFIz30RkpUXZ9TM1nKTE4vuCfMpu5
      uOf3EeE4qUs/57edf5orMWEbbIvMM4TrCwpmsuJDJDVk4wbERB+fV78kEqyUW7wBvVE7y0Km
      +eDUC/J6G1Rz7suzn/05Y9V8CR/w0TWPbzScY1d1kYyMEdPL/GH7BR6f+DFadnHwe8vAm3wj
      /DZ/5P+AL/Ey+2sKoCTTrkbJr/SvLiK4W7uIdvU4Q9s/xxFrP3LDHWs7nQnBWKvI324AACAA
      SURBVPtDXMrHeG/UwltDCvJ8xT+OdpDf+ghO8zbcZNO6xwUhoH0HOCUCpQz7yxXiF0KiC4mY
      2XyXPcB+fzLWuVdPsXXsTWKGR97XCK+gYix6kt7Nn0Um60B5FAZ6F0XMOWpxBJ2pKZKlIdTl
      97j71J9hDJ/Dj9dzOrNwBVcL/t0oblXY3tJ6VhLh5/sr1258pdmy8uByeXrer39x3hXBFbuK
      THIDSaOMZSjur5rg9yb+Ci01OFcu6OUou/DaYJhfDST50YlKCF1EeiDmGeyBljKfSj+L338e
      965PI7R1aHWkxqGxOOeyCfw1IszKnsB3XFQovmqZNRGKUd79KBN1WxesjvPjV/Z1Dm54EtF2
      fWF764FSiuDwee4L9RPRKyrHxVuWynvrAlxZsVskh4/z9ZpTi8p1hEsMTM+LiQKoLfUh6jsQ
      msYnh7/LY5f+M3ViivcPN8pMKz2zdHVaXGbJHmCtlWAluW75dwUwk4Xs3dEgo2YTp2s/StSe
      mjvB5cXRGqpljq1XfsrZ9idRte1crLmfP8lvR97RBrqJP9pHzdDTPNSQmXHGE5WYNSHY1QRv
      HDvC1Ia9yPAagRWzPdcNMvW7+DfBX6Jrq+8BPCUgWnPDvvlC01Gug6MkRaFjYgM+nhIMWg28
      ce+/wWveckN1rwXluUR63+XT7kskLIdzaYvVXvNdbyOyvhOGL/LZ0b/DtBYTSNyC4eL85CYE
      fD52lIaRFK/WfJbPpr7PvdHVndFuDWZpbb2euzey56hA++NvPjYTETZb0WoNVOArKPgaulCr
      0onjK164IDlW+3Gubvg0TiBOdPIiIwUdwy/zQt1XuRLcThPjTAVbcK0ogbFLkEuh6joQUiLD
      ca6mDXL9PWyrUaQKgu+cTVJllKkLK073FUkFG5FV6/MMFZrGXfkjmNryyDeozKB9GcnFyC6y
      NVtuXF1pmJRadnCl7QFKqSnyvs6hrU9x/r7fQ9W2VgwgtxAqn0a99H2qh4/iej5SeWypLlMf
      Xqi2rMj+L5Z2caH+cbx3XuDx8R/TFczg+1Auu6AEvg+OJxizDarDFdeIivFL0Gqm2Fc+QlOg
      8AEHri1cSVdqeCGzXD/0xRUrXF/iITCFP/OiszaCSgMlX8P2NUIr+FXMwvEEGxt0jtRsncmd
      I5js/AjZyR4uawa+NNELKd7r+FIlM7BSiEAIv3kHQso5Xbrcsp9hxhnMHKIuIrivOs3fp3ax
      L3MFJxZEa1v/bFqs6uT5wb18yTi27F4lwxuM+AmGug7clK5eSA1CUbxghPOf+GPwvdUjn24S
      qpjHP/IL7vJO80hTBlNTnE1Zy85KS9saLzm7OXfXH5LMjbAp8w4b66exSx5Kge/7FD0bwzDw
      fZ8mVaZnsobNjTPu1Ag0wYqelx8Mlsrxt2LTXYFe8iWGr2FJF8eXpD2TgPSQKAwx7ycyi+CM
      WXnV2d+D751LMLznq8ho1aJ75eoOlFI8eukvcaXBa2ILyq5Yk33XpWHwEMPxrSA1jOlBvPY9
      jG44wHfOWGwtDvDl5m7C2as8XfU7qPOHuR7HTqHpXGz8GIWpY4SN5Utrb1bnpbbfRVrrT9ux
      doMz68x1EL+fGkMmatcUwQSKOlWkZNukfv197pJXuKemMKOGVCumgDmTS3J27+8gzAC2r3i0
      tUBQ6oCOosIAlThonZIvoehgWRqz1uOsaxLRHfQ1LKrvLxZPwotxkwyggLSnE/QFZSWJa2UM
      ufBF/YqZewZSSMxVKE8peK3HZHj3l5G1KzuqCSF4PfpxvOpWhG7Q2fcS01qCVqeXz8fPMDb9
      EsM5ycYqn3+4NEh/5wG44+OcVz7/cfgyW9VJarpfZWLX44jrJFa3rovv99zFHyTfXTZL1gUr
      JvMPK5W5Pz1G+ejLWI98eU1nPQn0//ivCFNmu9/DvpoMQdejWKistFIp8rkyuqFhGBpSQiqx
      EeK1AOSj9aRcg+iiwwQlvpKkXAsfwZgWYmdyxnVCCRwkrhLoH6josxALSX+hqtRfcG1tb4XV
      IG2lgRLYShLWvCXEv7CiedXnahU7HpyuexRR27pmo27jZpRZId7Bql2k6ndxWevCdhW1EcXu
      BpewCV+yDhLsmXGGExK/aTNnNn6BiS1PEL7w6jVfbimEEIy2P8xwyWT2wO5ZcWvatXBi9ddd
      562CTNShb75zXYa6TTt206kG2J/IUCyVCQYtSqUSpZJNhAIjRZ18roiUlT1bn9E2L9YZFiNU
      L6vTUZV2R4o61fVhir6OUvNhhkX/wzzrciU1q7fg2o0RP8y4UpjSo0ovE5DXmv8WdmL5pqQ3
      F2C6+fqOtiwnWlBmECM/PhcFNltvPACfF2/QdfofoP/cXESRiCbJ7/k0N5LyTdV38sPQFzmS
      SnLY7qLoVerokY0fejZnvXV5QI0q5lBqflLyEEy27iYvAowRxQ5UI6UikYwQT4QwgxaGFSAS
      WbA6LnQULJeo9lMshSF8xooabU0Gpi7IeSYFX0cIiGjlGXH4g8BCulrqYrPw39IyS++vDzJC
      iYReRq4g1vhrBtYvbkgpOKTvu26xpAJBMd6y3EglBFtiBb6YPIthGRhX5pPOeleOVxzMrrcl
      Ici37OWXd/wHXuj6Fq9P1FL24IK17bY7xE55LvZrz7B0oskaYUZLJrav0Rm1YWZPJgREjEpQ
      uGlV7CNSwKOTzxLoeQ9/pAdvrJ8XJpu5lK6kl0mXNV7LtvGP8jFecPdiaKoyEc4oQGbriGir
      Z9C7dVhN47OUuG/W6DYPXSmwSz6e5+G6LlbAwnVdUPOejeGItWBfttTnowJfKab063TyUgo/
      NYpI1mPHmxkZ0ehIejOt+DN/PXI2aJpLsePOig7AKXNP9nWOj8Xxmq5fry4ClZw3Sjc5sfm3
      efvYG4jdW7m9yB9QCn3jnmUrqrBC5AI11AUmsDR/tijDRYNsGZrji2euzYFJHun/Hs91/Peg
      FOP3fJ2fXnidmJFgonkPKlaL8j0Ck1d57uo0BxpHiBplzDU0fe8P1iJqsUqZ2dVgtftrQ/c8
      H88uo5RCN3SKhRK+mlHn+R6e7xOKBBAs1wgtbEwKMFT5uhoHELFqBFAzfoqWuR9uMZMlQgpj
      epBSw4wFdaKf/dVpUv2vcKV+ww2rGYUQlOo2Ix/bdNukMZwV8/ypUZRdQOvctWI5GY6TdiSz
      G8Gpss7xTIK2QBZdU9i+xJrZz9me5GChHdG0EV3TQSnsxOfxT/6C+9/+v4j5RbqTO9gS6WNP
      R2lVJdQHl8BuoYizHpXnWgaztY1k0jQ1ojGLWDxIKGRgxGKE4xHicYtEMkhVVRi5TvlvY+kc
      id6Di2TWNSEEQjdQxSwfKb+JvkJaFoCJnKBz5A1iwydQpQJbBl6gNqz4WHIQo+/kDe0FFnfj
      NiF+3wPPhdQonHkdrOCqzB3r2kRrqDLhTDs6f5f4bY53PEXc8sl6Bv6MNX4wb/BMfi9Td31l
      7lAKPzOJfOG7fKT35+zze9jMKGnbZ0PSXpO4PSXJeub7fujIegyyq7nozK8G61sRtH//zQPf
      1pzpORnSlD66nJcp5wek8sFTM7FeS9oXAjYEp+koXeY9cy+Y17EX0E0GiyE2eVcIreDAFQ3A
      tjqP6Nh5mqeO80TzOFJWUqWc7Z7Gbt97W2VhuxEo30O8/AOk8vjSsf+IE28kteHBVZnTidWT
      mpjGKk7xfO2XmNr8cbCC1Pa9RWe4hCUrhsy+Qoi37/gfEbEaKOUQhoV+5V1isQi9wQ4CEz0k
      NIdC2aOqWi5LjbMUJaVjSLXinnE51va8vfazK32/tZPVOsTe+ZdQijld8Wqoj/jEpy6uO625
      X8yB55Jp3ssv7ZWyBs9veHY2eDzQkK4ExAPVYfhM0zD+8ZfX1dbtClW28SdHKDsOdWd/ScbV
      MPJTbD/8V5Ujq1aAMANcvev3efq+P2Vs0wHMgXOQzzKW3IYp/bkJyhYmIhCi7uD/CzNZ18K+
      jRuMk27YRtS3OVcIQ7lAYG6xWfn3lQISenkmvvZafmMrzcBLZ+e1nl/6+dZufmexDgZYbIKQ
      KOQ1OrF1+hCfuvgn7Op+msDohbWZwS2D64Bjc1W24Hrrlfl8pITOakVz6Wrl6NZ/phCmBY6N
      bN2Kn5tmZyjLZ9xD1BcHYY2TFIUQoGl4h56j7rW/RhTSnKv7KGVvnoAKno7KTJGt2QSBCKKQ
      4SNnvsdHTvw1m66+TES6dGh5ar083tzYLx33tfxwVpqpV7u+5ihco531tH39WKfiozIgZV8j
      rDlryolCwBONY+yvmuLz0eP8W+9v6ex7cXUmKNu4L/8A5Tooqc/Iruvn8pIDQ/3jN3+izIcM
      Wd8GVoisZ5D3NQbKAQ63PXlt0a6Up+P8r9nijaBnxilXd3Cs2ICvKirOy04NoqqB0uaHKgwz
      3k+u7JMtlGgeeIch10IB1VqZnlH/Oo8YWmgTWnhtdjKSrO5SvxDXWk1m/67EJOtdVVbGdWn+
      Apo3p1m4NirLVciAp/Q32HXlH9Gnh5YX811Uoh4RirK5eAZTv55fwCdswW/vLmGce/U6nrv9
      IDQdEY6RIszpYoKMa7Bz+LUZX6nVoXyfTplhSotRKuSpee5PKGSLvFfu4M/a/3cGHv6jCuHP
      piSUGu1WiR2hAhsCRWoNjytOhKFEE7GqBEcGQlyavNbpmiuJIrPpcDTmCZ+Zv3LJNVh95Vjp
      +1LiX4sZ1lt/5dr7ZN9eLMbETJcvmCcZzZznyMRGXDSumhvItt2NrG1FN4N09f2az8VPrVJH
      xaS/WgaAzXWw78Ih3nnXx932ECIUu200O+uBKhUIHvsFST/D0K77CI/8nHoybC0e5lLvPUxv
      fnjVZ0UowoXwBvRCinDfSQKyzKENv4tuVtSdwgzArMuH5+CN9tAj4zR5WeKaS0S6yIDB/jtr
      sQwAg1P9Dp5Kr0PWX9ST2bdhNm58ufPaUnl+6fX5764PJ0dM0MMENYemUH7mdNHZ8is9v5qF
      ePavXHINtD/+5oFvSyfNjW1QrgeCiOGxJTDOtsAYdi5Hb/V+lOfy8Jk/5TPVl2dSsy9HztPJ
      eQYB6c2JX64SeEqizWgjOqt87g73w8V36KMR8X5mXriFUIUsqvcMOy78mI9xlmE/xsnEXdge
      bFFD+Pk0fbV3oMxVDqxQCr/nFFVehtHmvUxXd+HZNl77bogliY6f476+H2ANnCQ9OslD+d/Q
      2mRwZQKS5RzTMkjtrnZq40aFYFVFu+Y6ZYLGSl6/szP67OeF19XMp1nPzfX46czTXbYkuTKp
      M1mOMu3G2N6aoL3OoiYW5FRfkeqQwpiJ58jbgom8JBZYyAyzfVuNuWbbmr+vLyf8pZvQ1WXy
      si8RKIxl+vuldS0fBAO3YvTRdHoj25Dy3WVlZmEKH09IXCUrn5Uk4xqY0seYkTelADSd3XVl
      +qZPMpBsQKwRLH87QCmFdfAZvuK9ipl06C2FGd/0MVwtwNliCw9dOME9XODyyZ/Rd9/vL1rV
      lFKVWIP0OHpNI/cU3qR5soxm6NSVhvnJRDf7mvLsjw4Sj7m4EUHJOYdIVGIfnDadU3311DfF
      qBFlCnmBbVeOi6oNmhzplnRG8jTXBZn/HSuEP5v0YLlfjpr5f/53n/VsVSvSgsT3BYcHKifv
      NCQDdLXqxIKL9z1SKsKxBEfHHLxyjvoo+EaCYiFHU8xGCLmA4RaK6EsZ0GdeRKuUW6D4ml86
      lnt8Llw6FK6SoAQ5z0ABVWI1A8rqq0WgnCYycJRstJVCoGYuZ81KMKWPIcqUVGVgNOFTZSw+
      6UUBpvBoiMFnxHEOne/n6J1/dNvbB8qxeuwJaAm5WHqRXwdihCa6aR88NKdt25U9QV+pAMHK
      YRWqbGMdfZ4tY++RLIzQqBWISJc99IMDaPDxwiF2J+IYWoUIdKlYkBkFvUpS1JJsbdTRZEU+
      N00T09SwbZdwwGTCDtCkZleBeeKf/asWiRULoVhI/AufU0tmZyEEIxl47I4IifDKW1IhYHeb
      he9bXBk1qYlqJCM62aLF1dEJupLlmf5U6lw88S5kiNl7CzwYls7uSzu40k7eU4KMZxCQLp6S
      K9gFVnJaWnytLWpjTPYidJN0oJ5ceW3RSghWzO479yJCoctKGpC6qMKz7Zu2EL/fEEKgVTcw
      7VTmoZIyEJpO0df4pHuYmO5WwhFFii+98u8wRi8TkhA/+hzxK4doyXTTIPLUSRsDfya6C5QS
      6Phzn2daW9S2p1tEwgaRiEkwpBMMaYQjBoYpiURNLMOjtVqQsyvPClYKJV16vbLZFQtOG13l
      zZk9kTRnw8amCCELljlYsjDRQiWadFOjSTKiAYpoUKAHYzN9ZEFfVn7n+RVikQi0UsH5a4s5
      t7LsWdKn6Cl0oTCEh+1LQtpKfjyrozbkc687wAuyopojuVKptUSwpaq3eXg+WIlkhRpu4wVA
      uQ7Rk7+kM1LiBfNeTnR8HCUkd/Y9jyYUZV/DkoqkKNEjq3DDVYTsLObpl9nn9zPsh4gbabKa
      wvd9NE3D930cx0UYLkMTIRrikmBoeVKvkls56Pvdq2UChiAekiRCAksXDKZcpouCkGkxlVfs
      qnNW3J+tNMMvRM6GfFkgBdSE1RKvgsoKcmLEZP8WY1EGQjXnd3ZtWmqvNTndbbG9tsjiVWc9
      RjMxuwdQMx3y524sfaH5Ja9SPqo7FDyduO6Qdg2CCzao8y+5mmGlcu3u6DBTvT8kriYIGSs5
      26327MrXy57ghekNdHuNJMfPQHsBbrPU5QshNJ3Je36L70iFV9dRccf2XI53PEnmss7j2jmk
      8BAoLtCAX8gRPfEScatMwY9Qp1wSAWP+1BXAdVx0XUdpFsMpRWvNyjNAPKDoT5fY3yHwFQxN
      Q/+4wPUFUige3FAhUkODs6Mee5pWD4NdiFkJYjIvGS1FCQYtTB1OjhdojeSIWDCYMXA9RVvC
      ZU+jzfHuNA9sSy7R3K1vItWkIB6PcmbUIWxAU8yj4EAiuLSO+XxHsxpFIZZlhlub6xYygSYU
      hvQp+3JJjPDiXbevZvh9Bd8RIeATNT1LXvrao5wpVWYWQ6uoy6pDirwNL5T2cG7zF7nj0g/I
      1bdVzh24nSEEWmPnYj/bcom9V59FDxr8OvIYw1oNVjxBOtTAvS/+H2h+iR2xAp5SDBYtTGvW
      A7dSg6MFGHQC6EIRzRQ40WNQVSXoqPIXEZipqZmwUIkUUBt0qLYUUpPousRzKyJafcjHdXUu
      T7pYmqIlsbo6WqHIlGAyD54ZZ3dnaK7N1mqDty6axAM+GxqCuB6cHymgfJ/GamtBLMYCEUgt
      mJ4X0ddiWmqvMTG0GkplxaDtoWsSJzdG7ZKE4Z4PF4YVomhTEga1SW2WAeazvc1/X76sLd7J
      CwLCRwlJQKwemJLzDHThE9LWG7yyVOxZ/MK/SXfyRtWTqIgkfO43lJt34qsQfiwKrbWozCRd
      9kVemWjEr5lABiO3vTZoFsouok0NcvSh/xl0E2UXEI5NwQzQeeTvaPOnMJTH8akwusFMUoDF
      v9G4a9Fg2MT0ikianiyRHjd4LxlnW5dJyKyM5oVxg+1NFZFWIOcOCLdzNqZpoesajuOg6zpV
      hkfR97B9nTOjAQK6S2tcEVggWc3K6lczEUzDoCluLWI4TQo+snWxKnffhkoEnucppiYzhMMh
      PN9DzYhzruuh6zqlkk0gYKFQ2KUyoVAAXyk81yUQNNE0SXOVMd8TBcd7qiinU/gKGmOKobRg
      YqTAzlgeLVxh7t6UiTj17P+p7MluZsWelfS3K+bRWaLzzds+QUuyvXnxkmt7gqGMpD7sEbqG
      p+Fsa7MtLLxmu4IX011clF00aGlKWAzHttA5fpiryTtxG7eglKL+9E/5g9p3GcvC2TGNlFnP
      2bv+8LaL9loLSikoF/EGLrP73e9hWQZbMhcWzbxZX2fKN9B1waZQcS7Bra/gsh2iwyoy7Fgk
      dQdXCSaNCLolMaRCSUkulOD+DfOb0ULBRluQZU8I8DwfXZ9xofZ9fN8nGLQYySiKJZv2Bfs2
      hcJXikuZKna0hufqWA88TzGdymKaxhzRzwZoGYaOYZiUy5WVTtcrZ9nN39OwAov3OK5fiV6Z
      ypQ5P1TCy6ToMrM0Bit1LKRnvdYeh8LAzI1ZjY9aQOBzQ8KCBYnl4orPRNrgaCqIDAVprDEJ
      W4LfdFscrT5AwI/w25kf03LNUxqXi0FKKX411oIV8PlW6EUcD4ZLIX5k3c2l7V+bLzcxyF3e
      CXQJzQloTnj83YkpxPAVaLqNTm9cA0opYm/9kL39r5GKNNJij5AsF5ZJhlHpEpUOA15w0QEQ
      AkDBmxMRYr5NjzLpaDXZFS0w6RhMqgBpW6OzBWy3YsMZz0LfpEZtTNJWJdBW/IHmmaPkQNSc
      /51mJ82iA74S1x0wo0lBVXUM31cVqzXM5ZMSAEIQCBooXyHkjGgkAiu2oxQUfY2I5pIpKrrq
      gzhxSWAiwxzdivnzMLR//5X7vm2WxtBlRSas/Fv4eeG1ynXj/yPvPYM0u847v985N7459ds5
      Ts4BgwwSJEgKJEFRgRIlehVctkuqdaraku1a+ZNV5fIXV9m19ta6SuuVrQ1ciiJL9IoUSIoi
      SABEGhKYnHpi93QOb443HX+479thumcwgAbAQPtU9fR0973n3vfe55zzhP/zf2TYs8vY8HdN
      KpK6S5/RIhPUmFn2+Yb/HLcGnkUmcwTxPOdqOVL1Gfqjd1aO3TsDfaVoY7h1ns2v4AdwoRjj
      5dou2hMnEEISVIsIK0Ji5RIZUWO6EeXCXMBCWXFjBTzPJxg+cP9L0kcoQoQ0JLJaYGjuNNF2
      lcBXeF6A5we0Wy5KCTzXp+UGzMskJd+g6JvUAo3bTZO5msaYqGGLgDYaIhungE1PzmQsJ4jY
      ksUqlOs+ixUfXbm03YCc4XCrrNOXvPtueWs1oFz3GEkrpNicMzI1qNRdFiqSfMrgvuEoHYdU
      SrHpa2NNSvfvQmz9252iRNgYb6HksmfAIpM0KWgZZmsaOVHr+KThiXc4wRtDR3e7+Y3+wp1e
      ezjDKr7Jy9YTNPJ72L/6FsuOTeHRr+IVYpwt93E0V9uWuHU7CRQsrLaJ11c4uSR57GiGpwbq
      XF2G8srsGgWLfusUtfEn+BlPgFJ4Z1/GsgwsNctANsrtj4Hyd0WNHuRG/04WT/41nzv7r/E7
      bAHtdhvbtqlVG8RiEeYdjcOxMnETXisncX1JVFf00EIpRQ2DdirB0xPr+ROlJAstg2NDm3Mq
      SUtSaQp8x6XtSWYrksHEup2/0tQ47wxxehE+k72NJrcH6e3MecxXiswWTZaDFFfKFlHN47MD
      FWLWg3kHnhIESqCJkLNKqbDhnlKK26sey1UfXRNkY+GuJYRgNG+SiORZuFZkwGqBuiMTvL1s
      h6lYd0oV6o4kSBjPSGkOvxf8BPf2yyQ1l7aSvPOTk0Q0n6sVm7eExb5+ga0HWCLYNkLUvZYU
      kDNa7E1UuFGPhNufhKeNS8z8YhkjnoDecbJzbzOTHUUkQ84b7ciz+EJS91zq4t5pmYdRhGnD
      k7/MxZWLPF45T6B8ItGwc0skauD6iiVyxFWb5bpBwvbYZ9eIaT6Xmglu1aJYMiBhBdxclcRt
      wXJFUVMGB4a2Xi8VUVxY0PCkwTcKR7mlj/H4wmsM6yUuNnJMHvxd/GiaE+X/k0O5eyNUoyb8
      1UIvswd+nWA8A06LA/P/gl3btvRdhyXcj9R9DU9JLOmjVEjY1TUBhRAUGwEndkRDSwcNRLhg
      CyFIx0zmAgtUGyVCX2DbCbDe52rTb7lXmHQjPiQ0lXxC8iJoeTqvJp7FyY3z1I2vc5LjvFbL
      8UX9dUZiLeLS2RTmcr3QllQoivUAUa0iY5AzXS7NK+xEjJOLNicSi/T1VLg0N8Pk0C9BrENr
      LtbzGA97U7t7SUOPcrvvCMcqFzAlbHz2pg77RRVNl3wyVg+Rm0qxJLO8s/dXiF34MZlIg4mE
      Q6squblksEuvozQbKaJ31GeEz6vU1tCSSW7t/XUwI1w8V+bx+KtcbUN89jTCa/PpnvlN97gO
      QQj/naubfN3/Is0Tz4IQxJYmiRWnObca0HZgb69kpuhSaeuYUrAzLzD0jZNguyDIujiBJKm7
      aJ3DunOq0gyYLXo0nSDEmCHXhhKd7HSt7dFwJHXDCjtHyuBemeB1nsl1W+7ecfpuGvrO3gHn
      6hmcQ4d54vy/5HPpWaKt0/xkzx9xdnGZ/uBCJ7AcXm9q2aO2UEAFIcAibXrsizkUHZ15J8ZP
      WwdxkxN8qf8nTJVinLePcOPEY4hU713v6+MsKb+GvON5dpkjXCXo0T3aaOh4CClp+ILi0S+x
      SpT++ReppC0mejX0iqJys80us8KpGyYTgzp9ic4O3nm/T03A183PrNVzV/d+hpPnLrAy8Cjl
      2C7SzTlmagn2GusNB7vwg65Z/Kp7iNahzyIA6/IrPO6d4bmRNq81fAZTOmdue+ybGGBX1MD3
      BVdni/TYDdKxjUGWezwP3d0SRFEKTt1q8cROG03rJD6FQtE188ITErbGviM7qDQDFmttxMps
      OAHWV4OucyG2rBD3m5nbKoJoPEbEr/OZ5AxKwVLbxJw+y2HzGlnD4fRqksveEKWm5ETxFY6n
      NrdsnXES/G30OWYPfQaZ7mP3uT/nkjXGmWNfe+iaVL8fUUphLkziRDJhiWgqDwjQdXKV2x1S
      2nB3VUrhoGMqn6zm8GMOsvL072Mv3eBr1/4l/aJM39nvsnj8VzmLQ7b4A/T+JBM9gpM3TKSo
      ss9f4Y3bQ0z0hGuPHyj8AK76fRQ/8czafQnT5q3j/x1CSgRQZohvtg7wxPS/55h/lnx8vWNc
      OIkU+9V1LlcKyGSW9uABhiunEVLxzC4jdGSFIB0NY/qaFrBvJM2laZ+W28QLwgRdb+rulvlW
      5Q93vlxCw9AlUgrW6h/W7guUchFCkopJUjENcgaN/t0b2qSKOwZl40QIYMrl2AAAIABJREFU
      V37X8UGItdiw5/pomrbmlbfbHpalc2c2eMXoxU31U5kyyJouX45e5G+XAwZ2eMxWdH52y+SR
      yDmGNJODic3KHyjBd/Jfo7L3M2vF8JN7fgsM6wOjHf8wRSnF7pN/yvP+myhCmsoFP4mnBC0s
      VqslCr6JAJLS5XzuES4f+21Si5fR3BZLJ34dgBYGV28NcSSY5jenv86fZSdonfhlfnDKZvLs
      yxxO11Fth1NmD2OUGYg67MmFmXpdKhquxg+in99yf+KOfgbCjnFy/Pe4+vNvs/fCK2QiAX3D
      EZJRSdKGtN5C6J33kuzhpeX9pGpn6I1thrq0nQCEj2lI9o5mWK5ESZqSUt3l6mKR3X3r71Yp
      xVLFJ2ZJpgsBCrA1FTrDQUA+oSEQ+Aq0TmhobQKsTQYR+gWyOyECbEOFE+DeNb4bbrrtIqWk
      1XTWbgzAcVwMwwAUlhXfYBeGW2TcryKc5lrxSsExsEz497Wnceen+Ix9ngPWyrbp7qavUTXS
      m4wvYcfufsMfQynKNM0W4LukYopdZpludN0fCyh5FnVXMF+MsJoZxh/aQ2Eo5BEVQO4X36Gh
      RXn9+B+SPPN/MebO88yVv+CnyT44+Alu7X2C4vkfcDTzBkZccqlm0x9VSOEhhcD1BWdXozQH
      hjcbuM0qsllGCY0g3b+uC6ZN8enfYebnkiM3/4KVCzZloDHQy/GJFntmf8jkrt9ECMHsjs/x
      1xfKPFq6QU80NOVWqw6nb5QYyJlELY2xfJTeVLiTJyIaJ1d0AtUJsyrF9UWPtojSRCMWh9F8
      hIajCGSYGyiU6qzUihzQJCpYD9CEIX+BFGF30M1h2XDR1v7pbz31J7KxwsZYfDcJsVkEQaAI
      AoVphunn7k6g6xq6riGlxDC1dQe08z0TlBldfptBM2ymvezanPZ3sNuf4lf1nzNo1u5Qfqi4
      OldbKd7wd7NScWDkwEOP7X8/IoTAnr9K+toZJpegL+7hth08T9FqObiej3TbJGMGpWg/V/Z+
      BTe6oe+CUviNKq1EL8HoQa7nj2POXGR3e4oDt37MjGPRHDmMM3KYfneGtLfC/oGAszOCStFl
      paXx6g2dJ4fbFIoNVr0YynMYmnmVX1v8f/h08yfsq5zEW55nVeYIrFhopjlN+mZfh1YF4QVU
      hUWxLpgLUowzz5Q+jhfLIYQgWl3gmVGDIJCcvVmh4QqeO5ynJ2VwfqpCvRXQkzQ3rHAaV2bK
      JGzJ1SWYXBZkYjoTfVF6UiZShKhVXSjml+u0GnUODhroUgvNtW4STci7KP+GRNvqt/9IaSuX
      WLcxg00Hhc+4u/4KUAKxFpGQa3njDW9k84XuUnev7sBlb3Swm77kn1eeoTlyHG338TAk+A9Y
      Umd/yJfP/SmzRoyD2WoHkhC+IIXCFzp/MfSPWd7x7BaTRPk+j3zvf2R14AjTj/9u55eK1Knv
      8sWpb5FUTX5kP8rtp36fT89/E1GcQ9yYoSki3IqPMzfyOH2Lb2OacD15jGdqL3MwvkpfJgy5
      dhc9TRM0PI35VgQLB0MXDMYclIKzyya9SVj1MhwesZECflFI8N34lxG9o5hzl/knuVPYmsKW
      XVNIAAFKBbTcgOvzTQ6NJVD4KKUo1T1eu1jAMjRqLY/9wwkmZ2t84USW6eUmlbpH4DbZ3WcQ
      t7WOrm7VNYFYCxpsJxuM6M2Rhk0ndHSzVmuiSR3HCQFJvu+G5o+po0ktZJaztq7S29eH3pl0
      C6G45ysxYroiePSX0XtGt73pj1pUu/k+WbC3GUsp+lavUA80kkmDeCIaVmitPaqAH4nHWdn5
      LKJZIzb1Cyo9e9C6DUikRIvGN78vISg/8iv8h8wgx9/5f7nx1H+GWZrjTXmEJ2fPMCBb/M3w
      8ywOHEFEE6j6Vb7ccxlLm8XIKDxH0my0cV0P0zRoNptomo6UgnxQIZ1OdBbBcI+3hOLyko6j
      Woz1mLQ9qKgopMPIXGBGeedmled2d8FwXV2QIBS2KTF0yXLZoScVUrJrUpCOGdxcaqJLmFqq
      8eyhNGduVBhN+fTnwDatDdbK3YtwtlP+7qJ+15z3pihQN+ZqWTiOg67rtNtuWHghBY162LKn
      2exCHNaVe32lV9DpH7w18RGGQGdbNjPNCN/P/gpebvsOMw+FdJzvoFnDX5n7+5FytZtkZs6g
      iwBLC1da1vokKJQSNLUoQaWAEpLa0NF15QdQimupA9wee2bTsEopGiNHKFs59FYVd+I41R3P
      cC52kACBOX0O0aojMn3cNiYotnUiRoAmwTDCxSwSsYhELOLxGLZtEonY6LoWJi7Vuo1taDDS
      l6LaFkyveswWXN72JsL+b4CbHeZiZH9YodZZ9bsxdoGGQGfvUALHC7i50Aiz2C2fVMzgq0/3
      88KjvRwaz1BpSBwnwNYlEVNbM3PCMe6d6gyboaz/v/O/zYmwjdEftlm1DUOSTMU620roPCsF
      rDVj2Liqvzuk4k45U4wyr/VQGzryUKM315Jr7SYykQEB/vJttHfpjLOtWBGuj36CoekXsbWt
      z6Tm61wZ/uRahltENoPchZSUHv/NtZ9Vu8Hgue/iG1Fay/PM9R/DH9gV/tEwmY2Pc6EwiS4U
      0Wtv0RjaBbrOaktnIhUmJDVdEIvba0plRzqfV4FpRjdFB5VSpCyBYwq+9lTYsrZY93nRTa9F
      V4SUOHqUUt3h9nKBdsuhtyfLQDaCZazXGg/mLKoNwcXpGsM5i6UgwDI1JufquD48ujNHT9Li
      /M1lHhnp0q/cb45/Pde00bRfc4LXuq9sYh7YPEA3RyCEQHQJdDcBk7Y6ztvLnS86HKPq6ZxK
      P43Y9+T9A6k+QhF2DKF3QF9dDp73OoYQiNIiTrWMnkkxpFUIVBieXHZs/rzvD2mPHl977qpV
      R5VXQErMwm1Uo4pWWWJg7k0qgQWxNHq9yIlbL9JMDzL/+D/afK3+cdIzZ3CkyfKjXyGYnkQO
      7qSysMiAXiJhKupuqCzdbKvrBzTd0B9ZbepoQjFdtZlrxZlv2hQck0IDxnqMsGG3KRlsT1Oo
      uJRjgxAEeAu32NE8z95exUBK4Dt1bsyVCaRBIqrTXTwXS21WKy7luke54TG72mK816ZQdVmp
      uJy+UWJqqc7BQbvTC7kb7+9+28bcCXERm3RqTY9Xvv1HSlu+eE+F69pL4SHbKfndajjvltbe
      DmMECy2Df+d8gtbn/uBjMQE2igqCLQ7qezkXFaDVCzx76n/n/PAXKBtZ/FgWPzuE1iyzb/Uk
      I2qFkUiL3phiviYYTggcP+DCtTmOjWj8aeFxliaeRegmqlZCui1UZmsf5aCwgLp+GnnoE/ir
      84hoAn/6MobyeEJe4HpkP24kw+cL32bWTXG6/wXS11/h6QGfoVyUatNnuCfGO1eXODFuoknF
      hZkmI6mAuC3WdgjPhyslE6ECsqZHf0IgZVjQHppCirmST8GJc2xnpqPkDnsGw13G8xW6JhBI
      3rhSpCduEotoZGMWp68vc3xUR5cCP/A64c4uA91mp1etmd9dCYM5QNj4715Qh+1xQZuOuOP7
      hots+/vtlR9gqWXhC0Kknvh4hTzfr/KvnysJzChezwT1SB7hhzydu2Zf4bnITcYHNtOT7LLC
      d2PokogBuqbYJWZZ1jrmimERRJPb7sEy249KfAZO/R1mLIlnWMieIRiY4C352bXI3g9uX2PU
      uY1jpdk5nOP4hIdAoy8jCPyAiC4wNB2Fz76hCD+7VOHZPeH1hRDomuJAxu1YB51wZBcq01GD
      wbTGtestzk1V0SXsG1o38brd7pUKiJqCiT4rbOSiw56RNCdvFslGFXv6Tbo2+cZFej06GdwR
      qQzWFHqbVOpm2319cmz8freoDnccey/4xOZXs+pavJr6NM7BFzoz+T8+6Vm5yPM7FJ9VLyOE
      YmrZJRGL0JfeCvcQhCtpodImFZXUHckNNbBuyr5LlEoYJsHBZwgqq4hoAj1xR8TN93HbPu14
      Hi+SYvlGCWc4jmWE2J/byzUisk2zIXFcBy8QpKw7QuBC0Gg6CCHRpMQPAoLAx7YtDCPsQ1xq
      +IzmE+wajHV0bbNedHsYI8J6gEu3a7RdD1PXGclHcVyP5YpLPrkhc7xB8dnw280S/nyPovg7
      ndh7AeHuFt58t2NDuRgM8zcDX8XZ+fjD16frwxDfJb94lq/YZxCyE5lQkr6UQaGhEGgb3sa6
      0ygEzK/WONhrsNqSeK0W7wWzJWMpiKW2fatC02k997tcA+TCdYaCRXSZot7yuTFXIi6bDGWt
      tdfpByFtvloj0to8quuFIfOIbeN7PoahIxAsV2F4oOtYb7Y0BKGJ98NTq3zuaA4hJQrBjl6D
      uG0ghU7DMZhfatOXWs+bbF7x7/089GvtNLGmxaDd7gCN7rV63znou0V6Np639RgvgLe9cV4+
      8I9xc2PvMsYdI7rOxwYIp5w2QWkJmR/e4tsopXhi7kW+mJsjTKx3IhUITF1SaThAGHnbzsHb
      MZDh8uwc+/p1fidzgVfOzKOncyzIHuZyhwniuQ3XCsgunGVf6zLX9TEWh564L9PNuvoWTXRu
      zBeoF+eJxHsY60+sLZcR2wIRUHMFVxccdvWFoVKBIBazN0Tb13WrC5+39ZAeMdzRgnWTu5Mb
      ujxT57lDGaKd/NJ4b4zzt1Y5MgaGJmi2feYrATv716vT7kQj30v03bv6edM5QsEpYDRWGdKr
      GELRDgS3/ByWDNhlrG7g/3yvqNCN521+gZNunh+d+GNEF8f/nob9+DTEEKaF1rt9iFSrLPN0
      dAa9Y/AqFTp9p2420A2DdHSjAm2VZNTAjmWZKRaotuDXJhpoWg2lpnhj6RovGr8Dpo0QAqsw
      zR8aLxGPC6rtBS7ePMtb3gSl5BhuehBlh/a3UZpDCYmX7AXPw5+9xv6jJZqlCj4xao7kzHSL
      kYxGLmGgRKh2E/025YbJrZUaE3mNsBClEyDp9n0Qas0BFQh6Exo3V5qkY6nQR1BhAUu97XF1
      ro6uQTyyDrCM2RoIHV3TUXj4QcBoTgvj/KLbPPv+Ra+0fH468lvsLb/D1/JXmS95NDu6dSKj
      I4Vg8nqcwcYU1jZx6q2yOYzqqTCF7ilByvA6XDShnM089f6UH/7BwCP6qtfJ9nSUQ4WrfKUR
      YJkWR8ZT4YYeqBDmu0G66BRBuCq+eHKRT+2No2vhyioEPJmrkpv/v7mm+ngn8QQiCBOXAkHS
      gifyDWKLlznYs8RMOeByIU1T6TyXXkKiODMfp12rMduaIx9PsFzXGOwdIpsId97plSalpRY7
      ey0EOgpFzPK50QLPl+ia37lPHyE22ug+qDCRZRuCRq1E201gmxoIwdxqk9Vam71DMWxz8+eu
      Nn1ycYmmSZSCTBzOrfgo1aI/rWFo3Sz6/U0EXUjBUO0qk4mjlFtXGd7Ar9KVPTt7OP1Old2i
      wA03Q17Wyd1BTtsOJFONCEU9S8qvkDdb/KKQ4Oe7voZK9aI0g+zs2+zxbpAVdY75V1guNO7r
      Jv8hS0uEyuR6sFr1qbcCbMvm8FgU1/WoVGtYlomUEikknu+haxqu62GY4buyLZN80ibRYVXu
      mkqahH25gH3M88nWd3B9RTyyvgI5nsI0dAxNMpGVTBBC0RUGQQDjzRpDO02+eTOHHzgU2zb9
      5vr5oz0Rai2DszMVDg5aaFJwbbbO2SWNH+mP8Zg9xbOZ+c4k8AgLEEMnXQUBQmh4ASxVoel4
      tNyASr3N9cUGnzyYwfN8UJIuaMHxAq7NlTk6Fg0/o5BoGhzbmeSdGzXmKh6mptjdpxO378BM
      dYID67ig0NTUv2f9EgeC/4/qbIWfqCi/safJnbNHk4Id+0a5NpPi8IEssystKvOXSBo+ICi0
      da5po/zw0B8gcoPgOURWbuD1NSAzHIbYgFLfGCeVQjbLxN/5n3jef4u/LP8q8mPC5f9+RCmF
      qpXCHcuwwGkSFJfQBiaIFKf5qn2aYk0xW1T0Z2wGcjrJDpdnqx0uMkGg8DwH3/c7YUADw9Bp
      t9sopbAtE8vaXHDbajvomkbbcYjYNkkLlCnw/QCtY25ZhqTV3toBXhDSI56a98gndNLZDAue
      xon96S0+TNzWOTia4dLtMkrBcsWjER+gsu8zvLx8kwONv6Qnur4TdE0h1Xk2goCk3mBypoSp
      KZIRg+NjMYqFCpqmY5omjUYd27a5NFPlwFiUsNqrO9FDavS2qzixI46mweWZFjoOu/qNTQU0
      Xf9CKcVswWWurNDdapnr7Qy/nJ3i6+nfwVz8W76Yn9tkqgBk4jqZfaFDNdIb4Uqhn7g/S9XT
      +HP9BRonfhXZDb3pBq3hw52HueHBdlLGQSTFghfnmcgKkeVrtP8BTwAA1aggF64TWFHQDDTT
      IvnOd/hUbBYVU1xcafPJg/1b+Hhi0SjxWGjuNJotIhEbTYaw8y5Scw2ib2go5a0pqOu6CKDd
      djorabjytVot8vnc2nFtx8VxvRDjsyF+HgQBx4dMvnU5wIsM8/xwc5Py+36AH/iYhoGuCQ6P
      h+x7rpdgYLHF10sLePkJfnRtL1+Qk2RthVAb6kQ6Y0kheWxnglO3G+wZ78UyNKQm0aRC13U8
      z+d20cPxG0zkbSLmZsUUnfrvEzuSXFtsYhuKiV6DclNy9nYbXSocNyyiUYHf2TUkfRmbE7tM
      tC/9D//znxiVGcaDWWiU+cXAL8PiLcZjDcLtCu50XqUAIxpjab7IdMPi4iN/EIbU7lOEEKjS
      Eoe8q9Q9jbn0fvxbF8IqrweEsnyYREQSiJ5hSPYgElmeXP4pvz5QJhc3MU2L5YpLECgycXNz
      GHAN1y4wTQNd6yr/Rn6c8ITZlTr9yfVzu1QqhqEjpQxZ3WwbISWmuc7ZM1P06UmYNJpNHDcE
      ODabLZrNJqmIzgVGuLLzBayFSUZj6xOs3mgQBCo8vhXuRO22S7vdIhc3SJamuW5NsNx3lHPt
      fuyla1gE/OwWrAYxhuPeGk4/DAAEFB2TwZ44mg66Edab3FhuM5azGO8ziUXWo0l3RsR0TdKb
      MhFIZgoepXpA1NbZ0R+hWA8oNzwSlqLtBkRsi4k+GyE0tBf+mz/+k5uJPZw2D/Jo622uVSPc
      yp1gd/k0qUj3RYQX3SiWIVgJ4qzUBVMDz7znKq1yapzU3CnqWoy5/HGElASFBWR2a+r+4ywh
      bqobu4d90z/mK4NFynWPxVKLasvD93129EW4Ol8jZuuYd26/9yEzy2UGUuvnGYaOoXe+DB3L
      NNF1Dcs0N63kc2XFQC5Gq9nEtm2klHiuSywWQwiw/SZnzb3cDjIcC24SMTrnKoHrOLieh1IB
      gR+uslJKpJRMZDROnplGCxyaAwe5kjjGm+4ObpNnjh72qhlMPTSvi3WPxVacfcMpNBlCILqT
      OxHRODddZjhndp6h3LRThb9b/zwRU6M3ZTKQsYjbOlMrHtMrLhE7Ql82yuGJNH0ZCykFS2UX
      7YX/+p/+SdmXYFiY81fYwTy38yeYrCcYat4kdPglnrtuO4LA9xX5jIVjZ7jU8zRKvrf6XGFY
      3DTHKUaHcLMj6LfP49sJguIiIp3/2GGB7keU5/B55ySDCY2p5QZHxuL0p01GeyJYHQjyyxdW
      sU1JKvoemNWARluhAmeLidCVu421VJeM9iWxbRtD1zFNA9s2MQwdXdfJReDKskexbz+NpQUO
      JupAWAVoWSYR2yJi29i2hWVZWKaJoYcRHrNVolFaodB/DKGbpOozHJl5kamRT3My+hiv14d5
      q97PjbLJSnyMV2u9nKxl+dvqEGbhNsMpDV2DWivA1FT4jLijwEWJNVNwPRHWgWLogp6kgZCC
      dNyi1gooNnzmi236UgbXF9sbJoAQLOs9RMuzaKV5ihPPMNlMM9G4guY7NBotPC/AdYKQps/z
      cdoelws2DT9GPdn3HlShc++xLG5qAIBg9hpiYAeqUQ13HDv6D2oSqMDn4OJrPNdbQwrBYqm1
      BeIwX2xzYCSNbelcX6iTiupr+YF3k1TMYLUumC82yMbkWsQj5MK/+3NcqMJQT7yzcq8jfgHc
      AHQp6POWeTsYo2D1Ei9PMxj1KZbK6IaBHwR4rke77SClwHXDHU3TdPqTOnOrDlZxivz8L3he
      vYXwffKyypzsw+vbiZMZodK7n0JqgnpqhFpqGC/Vx7WyTunaZUrlOoEfkIkb2EYY5Wo0Wvh+
      SHnZbru0WmGfMMfxMIytTfJUEFIl7htOUKy5eL7PYslFN/QNEwAgkmAlu4/E6jVqmQm8ZD/F
      qsa4d5OYbeJ5/lo/qa5MlqOUrT7q6cH7elEqCIjNnSVy4y36iucRc1dpGinEyD5EJKxsClbm
      QvvwDuz7x1n04jy/HzlD3NKYLzSBgGx88wRwfIUbCPJJi1zS4vpCHcfzSUTendxLCMFyxcFV
      Bis1WKm0uL6iKDsG1YZDJrq1LhbCCTCY22q+ugE0AoEtwZIBb5ZTOD0TXPHzHG5fwncaOI6L
      pmnUG00UhIzOvo/TdtB1DcPQ2dWjw+pt+tUKnhfQl7J4JFfn8eA8M0WfYnJsy30JISDdx1Js
      hJ3BDGlLMZRZfwaO43UKXMKFOGSuVriuS2TLsxLYhmR61aE/bXHmVpWm42MaGkcmkndMAEJk
      Yj2/e60AvRLJY5Xn2JduEImYmJaOaUpMU8MwdW6LPi6NfvaucFHl+9Cshg2ehIRLr9NXu8mC
      nyTuFDiRLjI++wpq5jKl3F6EFUUmsqhmFVVcDDsh2rF7wVEfflGKp1Z+wrGekKjp5mKdPYOx
      bVfmasMnHQ8Lv3uSFk0nYGq5TiZubEmGdWW10ubqQp3x3jgjPTH6MjEyqQSFus8ju3qw7QiX
      5tu0HZdUdDPK9sJsm6YDS6X2pq+ZokOl2mKx2KJQc+mt3uSm6MNP99G3cp7dfTa6pnd8CrBM
      a83XCB1tswNRFgz2xOnvSaGbUWqNFtmYhqlJhtw5fiH2grVNC1ghCOwEpZkZnu2rYemSl6/U
      GesxMA0Dy9IxTB3LMohELCxLx46YW9QkCODUVItLc00WggQvNcfJtxcZ67XJxI13b5TtBwFX
      jB18Vi2s0ZpseLMc0qZ5pVmF6OYokFKK8dlXeMQ9R6/l8N3qXub2vIDa9yQzgY+sFplLPMuc
      1FDeKT7bepnjc/+Kc8YBbmQfI/CctV6/94LhfRxEtZusTk9zqr2eoNpuPkshaDqbG4n0pm0y
      CZMzt0ocGUuGmc6OBEpxda6GbeocGd8cozd1Scw2aLs+MVvn2M48pbrL2fkiPRGPgVRop2fj
      5loIc8t9b+KHglu3L3OlZ4QlkQFWMK1QfaLRzZG7LlvIRhEipF039XDMhqP4nnOMIJ67O8RS
      CFb3fI7Xl76PKHlMm318Us1vYqXeWL243Tg/XMzy2tgLqFHFRTvkDJ15a44XekKIxrsamMKK
      kPQrCBFmzrq1leGzEfQlBY8sv7S1LtZzeEqd55HeNlIo5lP7Qry2piMMK4z26AY4bcTO4/x4
      4GtcrqfJe0uMTL+EjCaJr1wjVpzCWrqG8u+3w8zDJ8KOsjD+DIfHkhzfkeLIeGrb1V/XBF6w
      NYVvaJLDY2km5+pcna+hFDhewOWZGsM9McZ6Y9uaN/mUxXKlm7FXpGMGx3b2YsaynJ2Dt6fa
      mNbdAYUbKwSFgLTmIITgrfxzvLSUIgju3rVzowRBWOl1ZaZEf4f17c+LR7iRPf6ufp6yorwy
      9Gu8PPpVWvHeDaB8cYf6bkYhBwrOLxucS55AROLIaAIhNYSmMbvvS/zbt90wqXg/H+D6wLN8
      Y97nK8kLWBs6CwMIIflU5Do3Zn5BceAoCIkqLjBSPMee/iZKwbkFSXBgcMsMVc16GPeXGiLV
      w6XM74XVTE6LYHmGXZXzHIgsMxLT+d75HJM7voyrWeFEMsJePx8XRKin2fhBWOF0NzG0uzWn
      CFf0g6Mpzk+V+buzSwxmI+wZTHSIZbeXQrVNvtOqaGMtbF86Ql86woXpCgdHk3c9/04Z0aq8
      5ToEkRQ/Tv8Se6rfYiTJttvzraUGhZqLlBr1WpWxrOCx0ZDu5XzRYiU5cd8IgK453sYgUHCP
      RwiEi/OLy/281f9CmH2/c7xsP5OZR5grnbq/CaDMCJfHXuB/qT1NqnCVF8Rb7Eu3Op32FJko
      /FH0VcrlV4mbEj0KZ1eaXFtQLK5UeDP63LYJLhlNrP0/Wp0jWZlmPn8MInGEFeHMyBe4uHgN
      N3YCDlqodgN77iL4Hq38TkQ6j79wCxFLhcXpH6Eo3we5vaMJULez1NsephEiG7eDNgshaLbv
      vdMdGkvRdHwOjr574tEPFLHOirXdfWlS4HQywbFo2BHeDxS+72Po3fPWz92VcHju8p/xk52/
      g4in+Ub70/xu+SWKlU77Ik2QT5oslH0OjWWY6Fzn1FWX/pRHpQ3fLOxmesfz7yvhWYoOUmn6
      ZDY01F5nIQxNocUafKv1CIsjT9xzLG3/k7w5U7i/CbB2sXiaSvwx/qJ1gOzyeY66FzkaXyEb
      lTTdgCAQaLLjkfsBvUmNYlmiBneHaeh2Cyx7W4a3Rm4HjdyO9S2ugx/ysoPr27CewtkVfrDu
      I5DpPP7SDCKW/EiZ41RpCeW2wqxvMrdF4czCNJNOFcuQ7BuKYZlbw3Wig2tZp5LZWCHV+VmB
      pnUZuLefSBAqv+vfe8fpGg2+79NoNPE6WKONPbh0TScej6JQXLhd5rl9SU4tXKNkHqagYnx7
      KsEXskv0pELw3mKxRV9Sp1iqhJ9KwJIb5V+U9rNq9+Pu3fW+y0eDeJa5ZYN0bL0vxVrhi5JM
      VwTf8h6jNHT8vsZbXVx9bxNgTewYhZEneCl4jFdK8wwUJikYvTSivRwqvMWR9jnSEUjYgrqK
      8nTpJ9g1iBmKli/5oXySYOTA/cX53+UYYccQvtt1Sj4yEdl+hOugyktb/qZUwDFjjscnMni+
      4szNMkM5i/lCOyz8lmJNzx1vI603+D402j5tN6BQ9fD8gJ6k0TmZkGPxAAAgAElEQVQmBINt
      tEG6inFltsLugc2EWRvbGV2crq7Z+JoW7lyGETank0J2GtCF6M0Aj4Vim4m+kIlhX+sKr09J
      5I6jRItpxvpbgMA3NDLJGEEnPNlyA6aqOteyJ1gcPNq5v7/HMzYsTvmjHFC3NumFUorvL+R4
      K/kMfn7gvq9xI330fU6A7g1JiZ8dYia73nLkXOIF5i5r/Ke5M2HHdl3yaF+NiClZKLosNATH
      mq/xTt/E9uGv93MfvSOo0jIiN/BAxntfohSqWUXE72z4DJRXOBwpABq6Jji+I8XPLhZ5Ym8a
      y9h+1woCxZmbFUw9ZEwezNrsHIxu8BG61U/didAVSaHqkorqWOZ6r4aNzAieHxCogEOjSUBi
      GtENx2wce53to9JwWSy1mFtt0e8HPFYrcCUZZzYyitSXMHSBwAAVQhteqg5wxtyDOzz84Pw0
      IbiSe5Kp8k3G0hu7Eylua/0E2a1+5r1E33nk7zcBtr1HKSkc+CL/W+E45uotjiZv8ZenZ5lI
      tNk1nOLEbpvrt3MIK4ry3AfTwcX3EHY0zCJv8Cs+TBFSroVtt/wt3ctfvWEycWUWUxd89miO
      0bxN0/HXiKE2KvFiqc3kbJ1HdiaJ2TqeH/DWlRLjfVGUCrgwXaWDdcMyJMmIjq6FiTABNJ0A
      KaAvs33u4Pp8g12D0Y6CBxsCiNvvogKJ6yme3JfGkKGZdsyF7NUf8rp5mIWyR09c8sZqlBny
      XEocRAz1dJCaD1aCaIqzK32MscR6IEaQURVm7neMRgXhtBHp/IOfAF2R2X68bD+/UE/AYJWR
      wo8YyNYBRcntUGe8i/KLeon44gWqmZ0ECEQiG9ISBiFLgBCdgLrTgtzAR24G3Uvamk3C1IhZ
      Gj+7WKQnGfJe9qVMAgUHRxMIAW034NZig6f3Z9ZWe12THBiN83enl0lEdIZ6bEZ6IgRB2P28
      VHcIAjgwksDzAzRN8OblIpdnahwY3bogmIZkvtBivG8jV+dmcb2ASzM19g4mKNSaGLoKcxAq
      VGrTgGOjEZpX3+bfBMfwGKc9NB4mv7qjtsPaEuU6yLlJ1OCev3fTciEEF/WdfClYRHZ6IysF
      M+L+OwSp5Zk1MoAPvMOEEAKiSX6qv0D1yjfZH69R0ffc4+4U5sIVRpqT5AqTXJC7OejMEDcV
      Z9WTNJJD4HvgOQT1MiKVR8RSqFr5I48E3UuqQ8d54/wKz480eWZ/mpit0XIChBBMztYpN1xi
      ls7kbJ1jO1IEgeL6Qh1NCJpO6BMM5SwMPVzxIUyuSynIp9ZDfYYu8QNF1NYoN7rFLpsVPBnV
      OT9V3TABtorjKWZWWoz0RJhdbXBiV3JtnO6/s4UmjZaLHB2i3TMGrTqR+iKJVoG8KrNfX+IH
      6gi1gYOw+7EHhu2q9R/kjflzPN1T7SwaULD773u3EbqJyITYtQ+vxYoZYZUI/twbHNdXean/
      MHSKsJUK6HKBGgtX+Cf8W6TtcTGSZcVv8Ns7q0gh2Ff4O4oLOiVizHpJ9rWuMDtj8M6yiXjm
      Kx/aR3k/og3tpN03yoWZlzmkbnJjoYGhCUbyEfYOR3n1QgnbkLi+YqXcYqniYuqC3pzNzIpP
      oeryzIEMS6U2jncntfxmubnQwNYl84U2fhBsyi002z4zKw2GchaFqsPMagvLkOwZjBEEism5
      OlIKHDfgU4eyvHqxwKO7kghBh62i4xUoxb7hGH4Q8LTxOlfnzrLTqpCLG8SyIY1LtenxnZL+
      4GEsms7b7OZJ9TYSwcVKhEC43HcMMJVf6y70ofYYurnn15lbPc4zN/6ckZf/GSv7v8RA5RJ+
      YQkj38/V4V/i6epL2BlFsSGJWBrpoFP5JGF3FsAFSp2vMJb8fNPlnxWmace2luw9TCJ0gxtj
      n+WbF77Nb46VWK26rJQdelIm2YTO8R1hVmml4jDRZzOz0iIeNcgnfZqOz2KpzXyhzYldG3MA
      m5sZ+oGi1vJIxXSe2JNeU/5q0+P6fANDFxydSNBo+5ycrLBnMIZtSi7P1PACxUiPjakJTEOi
      a5JkJGR+CMdfuyQIgS4Fh8fiXLhdY9RuMZiOroElBXCtauLlxz8QGMtSajfLtbepBzovBo9w
      cOZ7XEv8J3iJ/LueK0xrDVK9BQz3QYrQNPx4jpv6OIYGjy1/H6WbXNzz24zf+D75mTf4wlgJ
      gIgBswWPz+6xw2DfPWLHugba7CWildssJXat0Zc/jCKEoO3B49YsQaC4cLsWNgMvttnRHwXE
      GgdOpemTTli0pU2hFFbo6dpmk6c7Zlc5L0xV2DccJZcwmJyt03ICZgstFkttDo/F6M+E54b5
      AUXTCRjpscmnLPrSFra53mzu2lwdXykGMt0ims0Z5W6SrDdlhAo/X2d6uRHmH3TBv/OfwE18
      MN07hRXhajPBBbmDWnKYXzFOIetFZlP73n0RlBrB4hQylvpwJ0BXRCJLI7+bG9ZeSvFRvJ4x
      ijLDb/ecw9LXK/il8rk632Kl0iIVj3ToQe7cUUNypKWVEp8bLHLhermDZn14OebcSIaLK2DV
      l3l2d5Tz03X2Dcc2wZ5vLjYZzUewNHCVxlKhji4lAYJ03EDboPTh8Q2mlhrommAgaxHa6G0G
      syZ9aZORvL3JFBJCkIkbCBS3l9vkElsLcNIxg3o7wAuCTkZ5nfh2HYgWjmWb4U5RbnhM9EV4
      bSXO5d6nH+iOHJIIr1+3Fe3BieZA0zhc+QX9ZovTxkGEfu+wqxAC6iWw4x+uCbTpJqQG/eNY
      fgP70ivE9x6jOGVjywaGriGFpDcZkI02EULj2vVpHF+Q7+tjNL9xBVQsldocGgy7yv8Xgxd4
      8dwirUQ/mvK45ffRHDry944+PEgRukFp5FFeauyGlR/x9D44d6tCPmli6CHfjZSCtutjGYLp
      gsNFcze3zXE8M45VdPiqfJMDuTAKcnOxQSqqMZwz15R8ZiWkFU/H7x1pS8cN2m7A1HKT8d7N
      TrGUgt2DMX5+tUQ2bq7tGtv5H0GgmJxtsHcojucL3tAPPfBF6K7jSY3va0/RMDL3XZor+8ZR
      bvujmwBdKVx8hyOPPkXh5I+pqBYJt4mmSYJgnYBXCMFgVDJVNkiZIX1e21WYhiAIwu38pXNV
      ntwbxwvgqHmLnYmblBuK1ZvziKUY35r4r2gOH/2oP+4mUdEUf2f+KlcWTjLQOEthPsZFbQer
      Ioly2ow3ZinY/ZT7D62FjAXgAD+aq6DNnaTYEkwXPH7zhBU6qJ3VMWpr1FsBjuNjGBqLpTYL
      RYdEJKyZnV5u4QVhaNMLFM22j+MqpIAd/VFkpwVSoeoSNTV+er7IiZ1Jsp2dwvXCbjLLFSes
      rZWwdyiOlPDdxR7qQ3s+GAj7nQSinc+8MvTYex9L0xH//MKqmnY+OgxNql3GvnUG2zA4VPwb
      DvS0CYIgJE8VIqz4UQGGrlNsBDSNAXYPx5hebnP52m2StmIs2SZmKuadLBFLIrwGAynwfMXk
      xVXGrTqn/D5+fOSPUZn7q1z7sEV5Dkj9vldNpQJoNUHTYPoiT3KFL09spi45f6uGLQOWqx6l
      hs+nDmap1B2WKy69SYNEtFNoLsJSxlrTxTQNLsw2yMRNdF1RrLocGU/gSZNGrc5KxUVqAk3A
      XKHNgdEEg1m7c0+Kn60k+GHmBZT5wbB7qMB/oJivj3wHKFspShOPs+/Gdzg8FGBIDdDWHDtz
      HX+N7gnqTrjtD2ZNJqXkWH8NKaDcCp3HoazGmSmTcrNNsx1QaWo0gyTHd/q8XbxK8SGdAO9m
      t245XkiIhNu9Gj/E1VtVZlYu0HID/CCEVg/mLH5yepnPHspwea6BCiAZNYkYIX2g63pomsSy
      TOr1BvGIiZSCZERnvNcmGdNwPcWVmTp7R0xSWZvBbAjrLtVdUjFzTfn9QPH6cpwfZr/wgSl/
      55M/0NE+8gkAYE2d4jnzLKbWdYDlpl2uWFecm3ZI2T5z9RX2D8e5OV9hJNlaY/5KWAHTy1UW
      ijoWTaQIONLn086ZCKGwdHi++Nf8xeouRG5o+xv5uIlSKKcFps2gM8vUUpPRvMntlTYBEl/B
      E/tzYGgM5OPE1vyBjX5BaNf35FN0Q6pmwcXscHJqmsD1AwwRrOmerglcT2HpoWNcafp8o7yP
      qfyJD74+Iwhh5w9KPrAJEJSWEXb0XZ2SxK23+C+zr7FcTnJ2tkLckgykFNENpKilhiJhehzu
      99nhNbh86SIjKZ/4hsSvFIJD+Saw0UQU2Eb4PVBwdl7HM2bRU70PBoP0EYsqryDSeZTv4ZZX
      GB43GMqajPRYnL7ZYFd/BCkFN+abxE2J6wYIAYEfoHWoS5qNFnbEotVsY1o6txYbDPdYmLpG
      09eYnKlycCRGt/M6bHi+AkrNgH/VfJLi4P4Pp2z1AUPeP5AJoIIAdeYlgvHDaNn+EMOz3XGe
      y7PyAnFLEu3RGctnmSv6vHm9yLFRyMbCR5pPCoJOB1ZLBuzokXhKpx0EBEpgS78Tk777PbV8
      jfG0xwnvG7z+zs8RmX5uR/fR7tkR8nY+xAm0bUUpSIVUlcbqNF/cb9ITlxv+rPCCsORvudwk
      2WNRr6lOE25Fu9LAtm0CpWg2Qt5Rx3EpN3yUcLi25NJSGuWqy/6hdRu/62PomqTQCHjRfJxi
      z/4P5yP7Hp0Q2QMb8wOZAEJK5Cd+AzwH7kFjLhplRmQB1SFMFUJSrrV4dpfi0kL4c+BD3KbT
      uRB0qdDx6QZCfSVoBjoR6a3pcKDAV6EZ5Xc6LmpS8chAK3x+TDJqXaLW/Ckv/7yHd47+txBJ
      fKx2hY3OoBfLUm9KckpRqHmU6z6OFyAQTM41ODyexjJ0PDekNmw226TScTzXw9RC4iiUjq8U
      rbky5abL3h15fDR25C2uzVWJW5KRfGTtGduWxvdXJ1ge+HCUH1iDLzxI+cBMIKHp756Rjab4
      12f6+O+PLDG76lCpt9iVc9A12D8A15cD4ha8cxsmkts3xNCEwpYejUDHlj6aUDiBhiYUIVM+
      WNqGcwWMpcOyw4SleDy3ivnO/0pfj80VNU5gRlm1BlkdfvIDeeAPSjbdWyzNf2g8xT+qv8a5
      W00OjMaJRcKcQr3lE7XDVd/3BYahoZSJpgkMY/OEd1oBhYaLqQl6ooIAsKRgIJGgUHU5fbPK
      gZGwT9i/Wd7J4s5nH2royf3IR/qG7cosu9UUjbZJrVblYP96gkWXsKdXsVCB2SI82n/3jjBS
      QExbr6W1tfWKqq1ULpulNx7wfLwG1DjKChBCjH9+5Q1+PP4HBNH1BJpSClTwkZZe3k2W8of5
      sxmPz6ffIGppNJ2A2ytN+tI27XaA0/ZwXZdEMkqgFO2232GNBlAEgULXNeJWGAEKn2G3IEaQ
      TZhYhmRyro5nxJjrf+w9J7qUCsB1HqrmJh8pXiDVnOPzO6pMLRTZld+sqJ4PZ6Y9dL/B1442
      SD7wZ7ax3nazaBKeiE/xGzP/B3snv4m5ejM8Q4iHUvm7Uh06xk8b45ycLDNfdIiYOsM9VqdO
      QhGJ2Oh6l74whBUYho5SYV1woMLE2MTAxoywWvuK2Rp7h+P8YDmHMt7bC1FKhXUc90ml8mHJ
      RzoBliLjLLVjHOjzMbQuxiSUubJiOOmSi0Gnc84Dkrsr/qajBOyLLPNbkVd5Yvl74er1sIsQ
      rGT3YhoahgaLpRY/u1RAMySJpI0d0VFKkUzaxONm53eSeMIiGrNIJCwiMauThYftIA9tT1El
      +t4dUaVCTqj3yCL+QctHOgFUdpCvZ/9zVhvaGukWhAvWUtkjE3k4lG7AmwNvayeVh1FU/w5a
      2TEOjsY5OBrn6HiC2ythZdZbkwVOXi1zeabGRkyPlGDbYQH8gSGbs9OtzmhbF4q4pXEs74Wr
      +XuQrrmkfO+hWkw+csiklxnmr+TzeJ2dsdtnNm4JvODDcrC2B3h1pSUjDyz0ppzmAxnnbiKE
      4LTchd9ZxROd6rEzN8vs7I/y5N4Unr9eQ7BR6i2PyZkK84UmiyVnU0uhIAjW3o3bar3vhKzQ
      9LXip4dBHoo7met/kivVZBj27DzowazOz28bFBqCqeKGxm4+XF/VaLyHBdl1A9ptn80UIiKs
      rHTvvRq5geDN2KcQ2oMJkYoPFCYQStRvbIrOTPRFODqRJJ8Ks7Sev/2En1pqcXgswuePJvB9
      l9cuFTh7q4K/xr8fHjdu1dhuBgT1CsppbTJlH+Y6bXhIJoCwIrxuPkEQgOMoHCcgYcGJHSYN
      FeV2Wfv/2zuz5ziO+45/es69Dyy4uAEe4CVapCSLsiXZKTuS5UolD3JKLpedF7/kIZU85u/I
      S6rymFTF5SqlHMfxk2NZcsmK7MiyRR20KN7igftYYO9jZrrzMFgsQAAkRQLcWXA+VSCLtYNl
      z0x/u3/d/TtYqAhurBjcrKRIpjMsVO5/MVqvNanVmpSKdWpVh3KpSbFYo9F0aK4Xidv6Qlue
      4L9af8b8+Nd36U4fDTPZk0yv7rzYTMV0FootFlabG+x9PxGKwN9VG8panJmI4SrBtdmOoKRS
      TETrpD57a0vn1mJJPxVh28RRyk+ItgGlFMrZXGG0mwRmo3tu8DmuTf2WAZaRnqRSlhimQUYX
      HMoZXCpE+fJhi2TEj5u9sqoD97ejoBsGmgTd0JBr+UT8Soiafwi0w3z+ZuMMl46/1nt73bEU
      KwXJWHb7QeJAyma16nD+ZplUVCefieBKheNKv1D32u2uVF3yaZsLt8rUWy6mriEVZOM6Y2m4
      IATKdVCrC4jccCcNitBRTgthWlvOUoQQ2+br7BaBmAEAVDTF/8T+EqFbpDMJLMvCNAzsiEHa
      cpns92gP1qYu6O9LcWklyfWCwTYJldnYqeNxk0TSIho1iCcskimbVDpCNKYTiW4dAxTwznw/
      50b/uuc6v1KKgbkPmTyw89jmKUXTlWTiOi+eTDHap5NPaZRqLj9/f3n9e+otSb3lcWQoxlOH
      kpwaj/PkRJzR/igxtwyspbYxTOTCrfXRXknJ5J/+A/Z4vbMbBEYAAIWB08w3IwihSKYixOIW
      lqmTiFuUm5COdez3fErjibEoo4NZPl1Oc2XZXv+sw4N13oYDvxv9PiqxvQ9TkBG1It+1zxHb
      oVYY+JmbB9MGXz7sZ+WI2n4447OTCSaHIv65gISZQouRrMlCyd1kKoFfOqlt62uZPFp+DISG
      kpLhT37Ka8ccoovX9u5Gd4lACUDoJu9Fv4bjsp6kVWgaQtNxpEanymznZUQtwVMHbUqOzcYF
      7oZv5YsKwZECaQVrv/p+iaxOM5i++/pIQxC1NSxz8+uPWhqnxmJ8fKPKxak6T4zFuThVoT+h
      c3G6tunaDNWOrQ/rOzv67GW+daBAMqIxqAq7dFd7R6AEgBBcH3+Ff/X+iksrEZTn7whJoOya
      Gwp0bLV5YhGdzwsaK7WHN1lipsKorz709zwIqtW490V34Wk+X6+k2BH/5h+xQw2CakPy0ecV
      lkoOuZTFQCbCYMbCNqC1YbfM9RQXzCPrp+JKKbTZq0zeeIMf6u9wfCjCzKrLwi68i70mMIvg
      dTSN+fGv83rzy4xPvcMr/I7heJO4IRFiLVuxlOsFo9ucHDYo1zNcmamTidYf4OR4vYY5hbpO
      c6Q7kWMP5SejFM3VApfdEn0pG0PzHdqU8kf3eMR/3aO5CJ/PNxjJ+dcYuqBYdbm52OD0wSSG
      LlgqOfzu4gpfPZ7hzY+Xefl0H0opplYlv64f5ubIc+vzqlYp8Hf22wwPmLDmp1uTOpX88cCX
      tgqeANYQdoxbh7/N64sH+cbUj6mV6xgT9lpMtLa2A9fxT9c1QSauc2wkxo2lFof6vojPyeYZ
      ZU5mUZF44F/eFoTAjSQ4mF1gvlSn6azt3wNLnkAKg1Ldz6KxWmmSifk1dkcHs8QsjScnOqWW
      +lMm08tNNAEvn8mBUvxkdphPsl9F5jYnIEuWpxgc2NiVFLdbCcSBvckJtJsEVgDgb5lV8yf4
      0/yTfEP/FaVaglRsc9CHEOB4ipWqpNoEy/BNmLt8K1sPgTZ39Y+sZxAB2qr7IlzOPUepcZOR
      7PbyPfd5nW8eqmHq/qEiwHRTcWJs65qnXVzD9RQ/Xxrl46FvgmFtGRhW7QNUG5JktG0SwU2Z
      +8Jt31QA+xERrDXADlTtHEndo1jf3HGF8JO4fnTLQUpJf0Jx/naL/vhOp7vbLZI3U2oK5rNf
      2p2Gd4F6eoR3ahM7fi4A2xRomiBi+j8xb4lPbxa3XVtJqfj3+UN8OPwK7BC4L+IZCtX2jKto
      OJLr1qEd26AaNb8E7p104YCsJwTgWHGiBpTKrS2f3S5InhrTGExrJCOCI3l93Q/mi6IUvKme
      p9G388sLOkIIzqefY7XmB6zfyXZPZigNor7IUqnjX+K4EsvQ0TRBRmvsOGQopZhY/IDxnLn2
      b7i4BN6B8a3Xthpw6wJYNqS2zhDdiBMItAnURpMulgZupUahYnP1dhnTNhFKUqgpDuU6D87Q
      BVcLFpauONznsnXDY2sXaI98M/UY17LP9l588B042VF+cfMY349eAtFZC80UHBqN7XeZjuQF
      H9+c4jMtRS5l47iCL00kAcGkN8W5Zm17V2anyZ+blxCi4yt1QY3Cdg5vpo0aOR6omIqeEMBI
      6TK6JsjrNS5dkZwdrlNu+jGxh224Mpvj2LCNEHCoX0PmkiyUFEvVIvlE2xzaavsrBTNVi/+t
      H6cR6WM5e5JG/i61C3qIG/YhWu5lrA0+fOWGx+mhdpTXZuZLkE3FOJjXabkOV5bM9RKswymB
      aNZgOwEYJrNegqP45kvLVVwzJ7a15YUQfiKvANETAojJGghoeILBuJ8bP24qNM0vMDHQXOb8
      1RiZbILxfgNNQDYu+GQpBqpGPnmn96Oi2DL4hfwaVzNnkCeO9pzLw72QQr+Lg/dm6o6ipuIc
      G/Jn0qglMISDVApNCFbqCpVLbGsGCU1nWSVgTQDXCx6N3N6kRN8LekIABh6OhKZmcizj4Xpy
      LV26/5iTtuKUXaVYr3HuUpzJ8RSpqMZIzqRRgTv9/ecbEX6U+lvqAyeAuy2Je5dGZoRbCzpH
      +zqx0grBTBGOHIC5oiJu+56fVwoxnjnUMSPbsc+lusf7xSy/j529a13fi5HjXF1+l5YHb8tT
      CKt3dtB6QgB9jTmU1a4H204AK7aY6umIItNqrY/mK1VJZcVjLNO5Vil4S7xIPX/80d1AN7Ci
      FF0bv6CIbwbqGizWDIZbLmUvhufplOqSpw5G1p8pKGZXXaaWHX7v9HH95HfuGfxe6T/Kv9UH
      UbrVU50fekAAqlbigChRcnQUEk86vt/6pt7f9lWH27UoWkWyWgWvUsTa5g7r9GAirC+IEILP
      tSHOcm1TfWBNN5iqWBwfjmx4hpv9pRzPTyVZb7n3n/khmuzJmTTwAtBLi+StJtcrBkf7myA2
      Vkff+Lef2vvFgRLFeoViUyA0ixODOkK0a+T6HaGh9jh/ZUC4mD3L1eXrWDiM5Sw8T3B8KEI2
      0VmISilQUmEYGlL5qRMn+k1GsgYfFg92r/GPiMAL4ODyOYotSSqm1gZtRbvCuc/mcUcIgaUr
      GsLmiSH/+vbopxR8UJ+gcPD5R3cDXcRJDfB69Vu8WvwZn9Ya4LaIGlHKpSaaJtANnXq9gSY0
      luoaVRWlP+oylNH4bXGQlcHT3b6FPSfQB2FKKVyhU2hoJK12bWCx4XNBS7b9gvxp3JPwwZzN
      xPo5y1rVcwUrTZM3+n8Adm+6Oj8IjYFj1O00p0ZNjgxEcFoOUkkcx8VpOZimiWkalF2bTNzE
      8SRXVw3eOvDqHqc5DwaBFgDARPUyDaUTNbz1kd+vU+WHNTakjsAv4AwwXdY5aRW5cqvFfAna
      o39L6bzhfQUvN9a9m+kCQtP5wDiNlIpI1CCZipBOxchk4yRTURIJi1jc5FBOYcoaw1mDX2rP
      Q3Rrge39SKBNICEEJT2DVWvieQLH8VBSoRs6IHCdFkIqqpqGrmsopShWYMBy6LPLzC8Z3Kgn
      mMhrvFF7kitHvtPtW+oKU4PP8dnsh0zGakipqNUaJFNxpKfQ1up+xQxBIqLzk9UnmB8725ML
      2gch0AJQSuFIgYWkUvWI2gaO49FsOmiahmEYeJ6Hrus0mw6G4efEbCgH07QZiLjMlKu8p8b5
      8PQPApWT8pHiOoBGs+mglJ8isVFvous6ruunTC/Xmrylf4XPRl8OVN6evSbQAkBJRr0ZBtMm
      yjKxbYEnPZKpOKh2FRk/lV806u/smLogHuvsRdekwf+NfQ9hx7b/Px4HInFmW3FO9DdQKKQS
      VD3dn1VdyWfVNLezzzA1dJb9eSy4M4EWgFhd4Bi3mHNNcpaLbgiSyc4o3t4O1dY83pSChegw
      P7eGOVY5T0Q4/GHwm1QGTj1mr3UzQgjejX8NsfwuC3qeaXuMYnzYH0CUgvHc9s5rjwGBFsDI
      8sekLY+pmrmpgLZPO+a1gxDwSv8MPxJn+NmZfwLPQdjRx7rzt5FDR3lbTXaKW3e5PUEhsLJX
      TounC29TbOlYltjGWW17Vy9NwGT9Ikj3rv4rjyP7zeFvNwisAFI33uOoNsftisGRNYeuO1+g
      Qq4d828mornBXsgphayWut2KEAJsAtluhbjhEtV1HE+wffkuteFP/1h/vhXlreHvwV6X63wY
      hPDzaIZ0ncAKoBbN49YEdaltO8q3ma2afOAeoZXIMx09zOrYE2yqnxpUQnMkEARWALas+d1e
      04iZO6c48dA4d/RvENnBR9a2XcXP89LtVjy2BNZQPl54H6UgtoN7+bVqgkpLY86JQQ/m8Gyj
      nK2B/iGPjkDOAEopig34YyNDLrp9JYw3Yt9mNXcCN5JmhwVCT9BrAST7jWDOAK06c6se7zUm
      sPXt7f+DhXPYMxcg2Rdu74U8MIGcAahX0CyLp8x5zB0E0DKi1PZ7WGPInhPIGUC5LrPpE4yb
      q6zUt47uTVdwefQV1NBkF1oXsp8IngCUwr19CXX5fRaqghPMkoEAAANjSURBVItL1qYKMFLB
      VDOOkwh+4tWQ4BM8E0gIhG6guQ2OJJskbbnut6IU/LL1NH849BokD4T+LCEPTeAEoJwmx6bf
      RCYa9NsOBc9a3yZvScEf83+ByA50t5Eh+4bAmUCquMj0gWd5abRKS2qYRsf+sTTFS0s/JTL9
      py62MGQ/EbgZQGTylAsFLjgWQzE4Mdg5BRYCXjAvIRddfj18Ktz+DHloAjcDyLkbyJsXieoK
      Vwr0O/r4rWbKj/AKO3/ILhA4AeA69EVcpFJkEpvdZKqOzo8H/55G7nD32hfySHkuUSKpufe+
      8AEJnACEHcXFYL5hMpHumD9SCc43BnH6thZeCNm/LLkmLbV33TRwAsC0qYgY5ZbGR3MdH59P
      miP86tQ/+pXJ72Cn0qkhvc/1RpTmHgogeIvg7CAykiBprFCpdyJ/iyq2c7Imz8E9/1uEdLEi
      EbwTLyACVoghJJgETgCgUELjworFYkQjNVvB0iHONKIwjeob2fIbslRAXD1HtLGCNjyJd/KF
      LrQ7pBcJnACEbmA/8xKJP/4nSa1M0zNYciJMeWnkygJiGwHofYOoV/+BRmEerX84UDWoQoJN
      8NYAgOgboODFWGwY3GimuG6M82xkmtjS1Z1/x7TR8qMIPXCaDtlNdnmpF0gBaOkDGM+8RMU1
      WKjrzJc8orrkldZviM18AjsseHc7E4RQatcfeMhDssvHP4EUAIB+5Cm8F7/LYtMmUp7jvcUE
      rpT8cPFfGL/036jZ68jtii3vJgIy+s7xyCG9T2DtBaHr6EfOoLJ5ih+9TWv6PNfqSeL1HO6J
      MT8SbI/zfSoEqzJcT+xnxD9/uqxutYL9kpWUyMIsanURlMI4+nS3mxSyTwjsDLARoWno/SPQ
      v3UHKCTkYQjsGiAk5FEQCiDksSYUQMhjTSiAkMeaUAAhjzWhAEIea0IBhDzW7G8BhH48Ifdg
      fwsgjJsPuQf7SwAKIiL04Ay5f/aNAIRUIKChRDjyh9w3+0YAStvc63O6DGeCkHuybwQAoKE4
      m3AZNT2kIJwJQu5JT3iD3g0DhQs8Hfc4GvX4Q8mg7AmKcl9pO2SP6Ole8kzcxRZwNCIZtyXv
      Fk1utzRUOPSH3CdG3pDdbsMD05TwbMLhREzym1UDQyiGLd/wz3S5bSG9wf8D7K2eQU6TZz4A
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
